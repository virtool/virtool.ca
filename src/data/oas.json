{
    "components": {
        "schemas": {
            "AccountSettings": {
                "properties": {
                    "quick_analyze_workflow": {
                        "$ref": "#/components/schemas/QuickAnalyzeWorkflow"
                    },
                    "show_ids": {
                        "title": "Show Ids",
                        "type": "boolean"
                    },
                    "show_versions": {
                        "title": "Show Versions",
                        "type": "boolean"
                    },
                    "skip_quick_analyze_dialog": {
                        "title": "Skip Quick Analyze Dialog",
                        "type": "boolean"
                    }
                },
                "required": [
                    "quick_analyze_workflow",
                    "show_ids",
                    "show_versions",
                    "skip_quick_analyze_dialog"
                ],
                "title": "AccountSettings",
                "type": "object"
            },
            "AnalysisFile": {
                "properties": {
                    "analysis": {
                        "title": "Analysis",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "format": {
                        "title": "Format",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "name_on_disk": {
                        "title": "Name On Disk",
                        "type": "string"
                    },
                    "size": {
                        "title": "Size",
                        "type": "integer"
                    },
                    "uploaded_at": {
                        "format": "date-time",
                        "title": "Uploaded At",
                        "type": "string"
                    }
                },
                "required": [
                    "analysis",
                    "format",
                    "id",
                    "name",
                    "name_on_disk",
                    "size",
                    "uploaded_at"
                ],
                "title": "AnalysisFile",
                "type": "object"
            },
            "AnalysisSample": {
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "AnalysisSample",
                "type": "object"
            },
            "EditPermissionsSchema": {
                "description": "Possible permissions that will be updated for a user and group.",
                "properties": {
                    "cancel_job": {
                        "title": "Cancel Job",
                        "type": "boolean"
                    },
                    "create_ref": {
                        "title": "Create Ref",
                        "type": "boolean"
                    },
                    "create_sample": {
                        "title": "Create Sample",
                        "type": "boolean"
                    },
                    "modify_hmm": {
                        "title": "Modify Hmm",
                        "type": "boolean"
                    },
                    "modify_subtraction": {
                        "title": "Modify Subtraction",
                        "type": "boolean"
                    },
                    "remove_file": {
                        "title": "Remove File",
                        "type": "boolean"
                    },
                    "remove_job": {
                        "title": "Remove Job",
                        "type": "boolean"
                    },
                    "upload_file": {
                        "title": "Upload File",
                        "type": "boolean"
                    }
                },
                "title": "EditPermissionsSchema",
                "type": "object"
            },
            "GroupMinimal": {
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "name": {
                        "minLength": 1,
                        "title": "Name",
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "GroupMinimal",
                "type": "object"
            },
            "HMMMinimal": {
                "properties": {
                    "cluster": {
                        "title": "Cluster",
                        "type": "integer"
                    },
                    "count": {
                        "title": "Count",
                        "type": "integer"
                    },
                    "families": {
                        "additionalProperties": {
                            "type": "integer"
                        },
                        "title": "Families",
                        "type": "object"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "name": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Name",
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "cluster",
                    "count",
                    "families",
                    "name"
                ],
                "title": "HMMMinimal",
                "type": "object"
            },
            "HMMSequenceEntry": {
                "properties": {
                    "accession": {
                        "title": "Accession",
                        "type": "string"
                    },
                    "gi": {
                        "title": "Gi",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "organism": {
                        "title": "Organism",
                        "type": "string"
                    }
                },
                "required": [
                    "accession",
                    "gi",
                    "name",
                    "organism"
                ],
                "title": "HMMSequenceEntry",
                "type": "object"
            },
            "HistoryIndex": {
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "version": {
                        "title": "Version",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "version"
                ],
                "title": "HistoryIndex",
                "type": "object"
            },
            "HistoryMethod": {
                "description": "An enumeration.",
                "enum": [
                    "add_isolate",
                    "create",
                    "create_sequence",
                    "clone",
                    "edit",
                    "edit_sequence",
                    "edit_isolate",
                    "remove",
                    "remote",
                    "remove_isolate",
                    "remove_sequence",
                    "import",
                    "set_as_default",
                    "update"
                ],
                "title": "HistoryMethod",
                "type": "string"
            },
            "HistoryOTU": {
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "version": {
                        "title": "Version",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "version"
                ],
                "title": "HistoryOTU",
                "type": "object"
            },
            "IndexMinimal": {
                "properties": {
                    "change_count": {
                        "title": "Change Count",
                        "type": "integer"
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "Created At",
                        "type": "string"
                    },
                    "has_files": {
                        "title": "Has Files",
                        "type": "boolean"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "job": {
                        "$ref": "#/components/schemas/JobMinimal"
                    },
                    "modified_otu_count": {
                        "title": "Modified Otu Count",
                        "type": "integer"
                    },
                    "reference": {
                        "$ref": "#/components/schemas/ReferenceMinimal"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserMinimal"
                    },
                    "version": {
                        "title": "Version",
                        "type": "integer"
                    }
                },
                "required": [
                    "change_count",
                    "created_at",
                    "has_files",
                    "id",
                    "job",
                    "modified_otu_count",
                    "reference",
                    "user",
                    "version"
                ],
                "title": "IndexMinimal",
                "type": "object"
            },
            "JobError": {
                "properties": {
                    "details": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Details",
                        "type": "array"
                    },
                    "traceback": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Traceback",
                        "type": "array"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "required": [
                    "details",
                    "traceback",
                    "type"
                ],
                "title": "JobError",
                "type": "object"
            },
            "JobMinimal": {
                "properties": {
                    "archived": {
                        "default": false,
                        "title": "Archived",
                        "type": "boolean"
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "Created At",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "progress": {
                        "title": "Progress",
                        "type": "integer"
                    },
                    "rights": {
                        "title": "Rights",
                        "type": "object"
                    },
                    "stage": {
                        "title": "Stage",
                        "type": "string"
                    },
                    "state": {
                        "title": "State",
                        "type": "string"
                    },
                    "status": {
                        "items": {
                            "$ref": "#/components/schemas/JobStatus"
                        },
                        "title": "Status",
                        "type": "array"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserMinimal"
                    },
                    "workflow": {
                        "title": "Workflow",
                        "type": "string"
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "progress",
                    "rights",
                    "stage",
                    "state",
                    "status",
                    "user",
                    "workflow"
                ],
                "title": "JobMinimal",
                "type": "object"
            },
            "JobStatus": {
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/JobError"
                    },
                    "progress": {
                        "title": "Progress",
                        "type": "integer"
                    },
                    "stage": {
                        "title": "Stage",
                        "type": "string"
                    },
                    "state": {
                        "title": "State",
                        "type": "string"
                    },
                    "step_description": {
                        "title": "Step Description",
                        "type": "string"
                    },
                    "step_name": {
                        "title": "Step Name",
                        "type": "string"
                    },
                    "timestamp": {
                        "format": "date-time",
                        "title": "Timestamp",
                        "type": "string"
                    }
                },
                "required": [
                    "progress",
                    "state",
                    "timestamp"
                ],
                "title": "JobStatus",
                "type": "object"
            },
            "NucleotideComposition": {
                "properties": {
                    "a": {
                        "title": "A",
                        "type": "number"
                    },
                    "c": {
                        "title": "C",
                        "type": "number"
                    },
                    "g": {
                        "title": "G",
                        "type": "number"
                    },
                    "n": {
                        "title": "N",
                        "type": "number"
                    },
                    "t": {
                        "title": "T",
                        "type": "number"
                    }
                },
                "required": [
                    "a",
                    "c",
                    "g",
                    "t",
                    "n"
                ],
                "title": "NucleotideComposition",
                "type": "object"
            },
            "Permissions": {
                "description": "The permissions possessed by a user and group.",
                "properties": {
                    "cancel_job": {
                        "default": false,
                        "title": "Cancel Job",
                        "type": "boolean"
                    },
                    "create_ref": {
                        "default": false,
                        "title": "Create Ref",
                        "type": "boolean"
                    },
                    "create_sample": {
                        "default": false,
                        "title": "Create Sample",
                        "type": "boolean"
                    },
                    "modify_hmm": {
                        "default": false,
                        "title": "Modify Hmm",
                        "type": "boolean"
                    },
                    "modify_subtraction": {
                        "default": false,
                        "title": "Modify Subtraction",
                        "type": "boolean"
                    },
                    "remove_file": {
                        "default": false,
                        "title": "Remove File",
                        "type": "boolean"
                    },
                    "remove_job": {
                        "default": false,
                        "title": "Remove Job",
                        "type": "boolean"
                    },
                    "upload_file": {
                        "default": false,
                        "title": "Upload File",
                        "type": "boolean"
                    }
                },
                "title": "Permissions",
                "type": "object"
            },
            "QuickAnalyzeWorkflow": {
                "description": "An enumeration.",
                "enum": [
                    "aodp",
                    "nuvs",
                    "pathoscope_bowtie"
                ],
                "title": "QuickAnalyzeWorkflow",
                "type": "string"
            },
            "ReferenceBuild": {
                "properties": {
                    "created_at": {
                        "format": "date-time",
                        "title": "Created At",
                        "type": "string"
                    },
                    "has_json": {
                        "title": "Has Json",
                        "type": "boolean"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserMinimal"
                    },
                    "version": {
                        "title": "Version",
                        "type": "integer"
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "version",
                    "user",
                    "has_json"
                ],
                "title": "ReferenceBuild",
                "type": "object"
            },
            "ReferenceClonedFrom": {
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name"
                ],
                "title": "ReferenceClonedFrom",
                "type": "object"
            },
            "ReferenceDataType": {
                "description": "An enumeration.",
                "enum": [
                    "barcode",
                    "genome"
                ],
                "title": "ReferenceDataType",
                "type": "string"
            },
            "ReferenceInstalled": {
                "properties": {
                    "body": {
                        "title": "Body",
                        "type": "string"
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "Created At",
                        "type": "string"
                    },
                    "filename": {
                        "title": "Filename",
                        "type": "string"
                    },
                    "html_url": {
                        "title": "Html Url",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "newer": {
                        "title": "Newer",
                        "type": "boolean"
                    },
                    "published_at": {
                        "format": "date-time",
                        "title": "Published At",
                        "type": "string"
                    },
                    "ready": {
                        "title": "Ready",
                        "type": "boolean"
                    },
                    "size": {
                        "title": "Size",
                        "type": "integer"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserMinimal"
                    }
                },
                "required": [
                    "body",
                    "created_at",
                    "filename",
                    "html_url",
                    "id",
                    "name",
                    "newer",
                    "published_at",
                    "ready",
                    "size",
                    "user"
                ],
                "title": "ReferenceInstalled",
                "type": "object"
            },
            "ReferenceMinimal": {
                "properties": {
                    "cloned_from": {
                        "$ref": "#/components/schemas/ReferenceClonedFrom"
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "Created At",
                        "type": "string"
                    },
                    "data_type": {
                        "$ref": "#/components/schemas/ReferenceDataType"
                    },
                    "groups": {
                        "items": {
                            "$ref": "#/components/schemas/ReferenceUser"
                        },
                        "title": "Groups",
                        "type": "array"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "installed": {
                        "$ref": "#/components/schemas/ReferenceInstalled"
                    },
                    "internal_control": {
                        "title": "Internal Control",
                        "type": "string"
                    },
                    "latest_build": {
                        "$ref": "#/components/schemas/ReferenceBuild"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "organism": {
                        "title": "Organism",
                        "type": "string"
                    },
                    "otu_count": {
                        "title": "Otu Count",
                        "type": "integer"
                    },
                    "release": {
                        "$ref": "#/components/schemas/ReferenceRelease"
                    },
                    "remotes_from": {
                        "$ref": "#/components/schemas/ReferenceRemotesFrom"
                    },
                    "task": {
                        "$ref": "#/components/schemas/Task"
                    },
                    "unbuilt_change_count": {
                        "title": "Unbuilt Change Count",
                        "type": "integer"
                    },
                    "updating": {
                        "title": "Updating",
                        "type": "boolean"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserMinimal"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/components/schemas/ReferenceUser"
                        },
                        "title": "Users",
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "created_at",
                    "data_type",
                    "groups",
                    "internal_control",
                    "latest_build",
                    "name",
                    "organism",
                    "otu_count",
                    "task",
                    "unbuilt_change_count",
                    "user",
                    "users"
                ],
                "title": "ReferenceMinimal",
                "type": "object"
            },
            "ReferenceNested": {
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "ReferenceNested",
                "type": "object"
            },
            "ReferenceRelease": {
                "properties": {
                    "body": {
                        "title": "Body",
                        "type": "string"
                    },
                    "content_type": {
                        "title": "Content Type",
                        "type": "string"
                    },
                    "download_url": {
                        "title": "Download Url",
                        "type": "string"
                    },
                    "etag": {
                        "title": "Etag",
                        "type": "string"
                    },
                    "filename": {
                        "title": "Filename",
                        "type": "string"
                    },
                    "html_url": {
                        "title": "Html Url",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "newer": {
                        "title": "Newer",
                        "type": "boolean"
                    },
                    "published_at": {
                        "format": "date-time",
                        "title": "Published At",
                        "type": "string"
                    },
                    "retrieved_at": {
                        "format": "date-time",
                        "title": "Retrieved At",
                        "type": "string"
                    },
                    "size": {
                        "title": "Size",
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "content_type",
                    "download_url",
                    "etag",
                    "filename",
                    "html_url",
                    "id",
                    "name",
                    "newer",
                    "published_at",
                    "retrieved_at",
                    "size"
                ],
                "title": "ReferenceRelease",
                "type": "object"
            },
            "ReferenceRemotesFrom": {
                "properties": {
                    "errors": {
                        "items": {},
                        "title": "Errors",
                        "type": "array"
                    },
                    "slug": {
                        "title": "Slug",
                        "type": "string"
                    }
                },
                "required": [
                    "errors",
                    "slug"
                ],
                "title": "ReferenceRemotesFrom",
                "type": "object"
            },
            "ReferenceUser": {
                "properties": {
                    "administrator": {
                        "title": "Administrator",
                        "type": "boolean"
                    },
                    "b2c": {
                        "$ref": "#/components/schemas/UserB2C"
                    },
                    "b2c_display_name": {
                        "title": "B2C Display Name",
                        "type": "string"
                    },
                    "b2c_family_name": {
                        "title": "B2C Family Name",
                        "type": "string"
                    },
                    "b2c_given_name": {
                        "title": "B2C Given Name",
                        "type": "string"
                    },
                    "b2c_oid": {
                        "title": "B2C Oid",
                        "type": "string"
                    },
                    "build": {
                        "title": "Build",
                        "type": "boolean"
                    },
                    "count": {
                        "title": "Count",
                        "type": "integer"
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "Created At",
                        "type": "string"
                    },
                    "handle": {
                        "title": "Handle",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "modify": {
                        "title": "Modify",
                        "type": "boolean"
                    },
                    "modify_otu": {
                        "title": "Modify Otu",
                        "type": "boolean"
                    },
                    "remove": {
                        "title": "Remove",
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "administrator",
                    "handle",
                    "count",
                    "build",
                    "created_at",
                    "modify",
                    "modify_otu",
                    "remove"
                ],
                "title": "ReferenceUser",
                "type": "object"
            },
            "SubtractionFile": {
                "properties": {
                    "download_url": {
                        "title": "Download Url",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "size": {
                        "title": "Size",
                        "type": "integer"
                    },
                    "subtraction": {
                        "title": "Subtraction",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "required": [
                    "download_url",
                    "id",
                    "name",
                    "size",
                    "subtraction",
                    "type"
                ],
                "title": "SubtractionFile",
                "type": "object"
            },
            "SubtractionLinkedSample": {
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name"
                ],
                "title": "SubtractionLinkedSample",
                "type": "object"
            },
            "SubtractionMinimal": {
                "description": "Minimal Subtraction model used for WebSocked messages and resource listings.",
                "properties": {
                    "count": {
                        "title": "Count",
                        "type": "integer"
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "Created At",
                        "type": "string"
                    },
                    "file": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/UploadMinimal"
                            },
                            {
                                "$ref": "#/components/schemas/SubtractionUpload"
                            }
                        ],
                        "title": "File"
                    },
                    "has_file": {
                        "title": "Has File",
                        "type": "boolean"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "nickname": {
                        "default": "",
                        "title": "Nickname",
                        "type": "string"
                    },
                    "ready": {
                        "title": "Ready",
                        "type": "boolean"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserMinimal"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "file",
                    "has_file",
                    "ready",
                    "user"
                ],
                "title": "SubtractionMinimal",
                "type": "object"
            },
            "SubtractionUpload": {
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name"
                ],
                "title": "SubtractionUpload",
                "type": "object"
            },
            "Task": {
                "properties": {
                    "complete": {
                        "title": "Complete",
                        "type": "boolean"
                    },
                    "context": {
                        "title": "Context",
                        "type": "object"
                    },
                    "count": {
                        "title": "Count",
                        "type": "integer"
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "Created At",
                        "type": "string"
                    },
                    "error": {
                        "title": "Error",
                        "type": "string"
                    },
                    "file_size": {
                        "title": "File Size",
                        "type": "integer"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "progress": {
                        "title": "Progress",
                        "type": "integer"
                    },
                    "step": {
                        "title": "Step",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "required": [
                    "complete",
                    "context",
                    "count",
                    "created_at",
                    "id",
                    "progress",
                    "step",
                    "type"
                ],
                "title": "Task",
                "type": "object"
            },
            "UploadMinimal": {
                "description": "Model for user uploads.",
                "properties": {
                    "created_at": {
                        "format": "date-time",
                        "title": "Created At",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "name_on_disk": {
                        "title": "Name On Disk",
                        "type": "string"
                    },
                    "ready": {
                        "title": "Ready",
                        "type": "boolean"
                    },
                    "removed": {
                        "title": "Removed",
                        "type": "boolean"
                    },
                    "removed_at": {
                        "format": "date-time",
                        "title": "Removed At",
                        "type": "string"
                    },
                    "reserved": {
                        "title": "Reserved",
                        "type": "boolean"
                    },
                    "size": {
                        "title": "Size",
                        "type": "integer"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "uploaded_at": {
                        "format": "date-time",
                        "title": "Uploaded At",
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserMinimal"
                    }
                },
                "required": [
                    "id",
                    "created_at",
                    "name",
                    "name_on_disk",
                    "ready",
                    "removed",
                    "reserved",
                    "size",
                    "type",
                    "uploaded_at",
                    "user"
                ],
                "title": "UploadMinimal",
                "type": "object"
            },
            "UserB2C": {
                "properties": {
                    "display_name": {
                        "title": "Display Name",
                        "type": "string"
                    },
                    "family_name": {
                        "title": "Family Name",
                        "type": "string"
                    },
                    "given_name": {
                        "title": "Given Name",
                        "type": "string"
                    },
                    "oid": {
                        "title": "Oid",
                        "type": "string"
                    }
                },
                "required": [
                    "oid"
                ],
                "title": "UserB2C",
                "type": "object"
            },
            "UserMinimal": {
                "properties": {
                    "administrator": {
                        "title": "Administrator",
                        "type": "boolean"
                    },
                    "b2c": {
                        "$ref": "#/components/schemas/UserB2C"
                    },
                    "b2c_display_name": {
                        "title": "B2C Display Name",
                        "type": "string"
                    },
                    "b2c_family_name": {
                        "title": "B2C Family Name",
                        "type": "string"
                    },
                    "b2c_given_name": {
                        "title": "B2C Given Name",
                        "type": "string"
                    },
                    "b2c_oid": {
                        "title": "B2C Oid",
                        "type": "string"
                    },
                    "handle": {
                        "title": "Handle",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "administrator",
                    "handle"
                ],
                "title": "UserMinimal",
                "type": "object"
            }
        }
    },
    "info": {
        "title": "Aiohttp pydantic application",
        "version": "1.0.0"
    },
    "openapi": "3.0.0",
    "paths": {
        "/account": {
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "administrator": {
                                            "title": "Administrator",
                                            "type": "boolean"
                                        },
                                        "b2c": {
                                            "$ref": "#/components/schemas/UserB2C"
                                        },
                                        "b2c_display_name": {
                                            "title": "B2C Display Name",
                                            "type": "string"
                                        },
                                        "b2c_family_name": {
                                            "title": "B2C Family Name",
                                            "type": "string"
                                        },
                                        "b2c_given_name": {
                                            "title": "B2C Given Name",
                                            "type": "string"
                                        },
                                        "b2c_oid": {
                                            "title": "B2C Oid",
                                            "type": "string"
                                        },
                                        "email": {
                                            "title": "Email",
                                            "type": "string"
                                        },
                                        "force_reset": {
                                            "title": "Force Reset",
                                            "type": "boolean"
                                        },
                                        "groups": {
                                            "items": {
                                                "$ref": "#/components/schemas/GroupMinimal"
                                            },
                                            "title": "Groups",
                                            "type": "array"
                                        },
                                        "handle": {
                                            "title": "Handle",
                                            "type": "string"
                                        },
                                        "id": {
                                            "title": "Id",
                                            "type": "string"
                                        },
                                        "last_password_change": {
                                            "format": "date-time",
                                            "title": "Last Password Change",
                                            "type": "string"
                                        },
                                        "permissions": {
                                            "$ref": "#/components/schemas/Permissions"
                                        },
                                        "primary_group": {
                                            "$ref": "#/components/schemas/GroupMinimal"
                                        },
                                        "settings": {
                                            "$ref": "#/components/schemas/AccountSettings"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "administrator",
                                        "handle",
                                        "force_reset",
                                        "groups",
                                        "last_password_change",
                                        "permissions",
                                        "settings",
                                        "email"
                                    ],
                                    "title": "Account",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Operation"
                    },
                    "401": {
                        "content": {},
                        "description": "Requires Authorization"
                    }
                },
                "summary": "Get complete user document"
            },
            "patch": {
                "description": "Provide a ``password`` to update the account password. The ``old_password`` must\nalso be provided in the request.\n\nThe ``email`` address is not currently used, but will be in future releases.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Fields for editing a user account.",
                                "properties": {
                                    "email": {
                                        "title": "Email",
                                        "type": "string"
                                    },
                                    "old_password": {
                                        "title": "Old Password",
                                        "type": "string"
                                    },
                                    "password": {
                                        "title": "Password",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "old_password",
                                    "password"
                                ],
                                "title": "EditAccountSchema",
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "administrator": {
                                            "title": "Administrator",
                                            "type": "boolean"
                                        },
                                        "b2c": {
                                            "$ref": "#/components/schemas/UserB2C"
                                        },
                                        "b2c_display_name": {
                                            "title": "B2C Display Name",
                                            "type": "string"
                                        },
                                        "b2c_family_name": {
                                            "title": "B2C Family Name",
                                            "type": "string"
                                        },
                                        "b2c_given_name": {
                                            "title": "B2C Given Name",
                                            "type": "string"
                                        },
                                        "b2c_oid": {
                                            "title": "B2C Oid",
                                            "type": "string"
                                        },
                                        "email": {
                                            "title": "Email",
                                            "type": "string"
                                        },
                                        "force_reset": {
                                            "title": "Force Reset",
                                            "type": "boolean"
                                        },
                                        "groups": {
                                            "items": {
                                                "$ref": "#/components/schemas/GroupMinimal"
                                            },
                                            "title": "Groups",
                                            "type": "array"
                                        },
                                        "handle": {
                                            "title": "Handle",
                                            "type": "string"
                                        },
                                        "id": {
                                            "title": "Id",
                                            "type": "string"
                                        },
                                        "last_password_change": {
                                            "format": "date-time",
                                            "title": "Last Password Change",
                                            "type": "string"
                                        },
                                        "permissions": {
                                            "$ref": "#/components/schemas/Permissions"
                                        },
                                        "primary_group": {
                                            "$ref": "#/components/schemas/GroupMinimal"
                                        },
                                        "settings": {
                                            "$ref": "#/components/schemas/AccountSettings"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "administrator",
                                        "handle",
                                        "force_reset",
                                        "groups",
                                        "last_password_change",
                                        "permissions",
                                        "settings",
                                        "email"
                                    ],
                                    "title": "Account",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Operation"
                    },
                    "400": {
                        "content": {},
                        "description": "Invalid input"
                    },
                    "401": {
                        "content": {},
                        "description": "Requires Authorization"
                    }
                },
                "summary": "Update the account"
            }
        },
        "/account/keys": {
            "delete": {
                "description": "",
                "responses": {
                    "204": {
                        "content": {},
                        "description": "Successful operation"
                    },
                    "401": {
                        "content": {},
                        "description": "Requires authorization"
                    }
                },
                "summary": "Remove all API keys for the account associated with the requesting session"
            },
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "content": {},
                        "description": "Requires authorization"
                    }
                },
                "summary": "List API keys associated with the authenticated user account"
            },
            "post": {
                "description": "The new key value is returned in the response. This is the only response\nfrom the server that will ever include the key.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "minLength": 1,
                                        "title": "Name",
                                        "type": "string"
                                    },
                                    "permissions": {
                                        "default": {},
                                        "title": "Permissions",
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "name"
                                ],
                                "title": "CreateKeysSchema",
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "content": {},
                        "description": "Invalid input"
                    },
                    "401": {
                        "content": {},
                        "description": "Requires authorization"
                    }
                },
                "summary": "Create a new API key"
            }
        },
        "/account/keys/{key_id}": {
            "delete": {
                "description": "",
                "responses": {
                    "204": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "content": {},
                        "description": "Requires authorization"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    }
                },
                "summary": "Remove an API key by its ID"
            },
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful operation"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    }
                },
                "summary": "Get the complete representation of the API key identified by the `key_id`"
            },
            "patch": {
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "permissions": {
                                        "title": "Permissions",
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "permissions"
                                ],
                                "title": "EditKeySchema",
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "content": {},
                        "description": "Invalid input"
                    },
                    "401": {
                        "content": {},
                        "description": "Requires Authorization"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    }
                },
                "summary": "Change the permissions for an existing API key"
            }
        },
        "/account/login": {
            "post": {
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "password": {
                                        "minLength": 1,
                                        "title": "Password",
                                        "type": "string"
                                    },
                                    "remember": {
                                        "default": false,
                                        "title": "Remember",
                                        "type": "boolean"
                                    },
                                    "username": {
                                        "minLength": 1,
                                        "title": "Username",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "title": "CreateLoginSchema",
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "content": {},
                        "description": "Invalid input"
                    }
                },
                "summary": "Create a new session for the user with `username`"
            }
        },
        "/account/logout": {
            "get": {
                "description": "",
                "responses": {
                    "204": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Invalidates the requesting session, effectively logging out the user"
            }
        },
        "/account/reset": {
            "post": {
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "password": {
                                        "title": "Password",
                                        "type": "string"
                                    },
                                    "reset_code": {
                                        "title": "Reset Code",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "password",
                                    "reset_code"
                                ],
                                "title": "ResetPasswordSchema",
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "content": {},
                        "description": "Invalid input"
                    }
                },
                "summary": "Handles `POST` requests for resetting the password for a session user"
            }
        },
        "/account/settings": {
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "content": {},
                        "description": "Requires authorization"
                    }
                },
                "summary": "Get account settings"
            },
            "patch": {
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Fields for editing a user account's settings.",
                                "properties": {
                                    "quick_analyze_workflow": {
                                        "$ref": "#/components/schemas/QuickAnalyzeWorkflow"
                                    },
                                    "show_ids": {
                                        "title": "Show Ids",
                                        "type": "boolean"
                                    },
                                    "skip_quick_analyze_dialog": {
                                        "title": "Skip Quick Analyze Dialog",
                                        "type": "boolean"
                                    }
                                },
                                "title": "EditSettingsSchema",
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "content": {},
                        "description": "Invalid input"
                    },
                    "401": {
                        "content": {},
                        "description": "Requires Authorization"
                    }
                },
                "summary": "Update account settings"
            }
        },
        "/analyses": {
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "created_at": {
                                                "format": "date-time",
                                                "title": "Created At",
                                                "type": "string"
                                            },
                                            "id": {
                                                "title": "Id",
                                                "type": "string"
                                            },
                                            "index": {
                                                "$ref": "#/components/schemas/IndexMinimal"
                                            },
                                            "job": {
                                                "$ref": "#/components/schemas/JobMinimal"
                                            },
                                            "ready": {
                                                "title": "Ready",
                                                "type": "boolean"
                                            },
                                            "reference": {
                                                "$ref": "#/components/schemas/ReferenceMinimal"
                                            },
                                            "sample": {
                                                "$ref": "#/components/schemas/AnalysisSample"
                                            },
                                            "subtractions": {
                                                "items": {
                                                    "$ref": "#/components/schemas/SubtractionMinimal"
                                                },
                                                "title": "Subtractions",
                                                "type": "array"
                                            },
                                            "updated_at": {
                                                "format": "date-time",
                                                "title": "Updated At",
                                                "type": "string"
                                            },
                                            "user": {
                                                "$ref": "#/components/schemas/UserMinimal"
                                            },
                                            "workflow": {
                                                "title": "Workflow",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "created_at",
                                            "id",
                                            "index",
                                            "job",
                                            "ready",
                                            "reference",
                                            "sample",
                                            "subtractions",
                                            "updated_at",
                                            "user",
                                            "workflow"
                                        ],
                                        "title": "AnalysisMinimal",
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Find and list all analyses"
            }
        },
        "/analyses/documents/{analysis_id}.{extension}": {
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Operation successful"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    }
                },
                "summary": "Download an analysis in CSV or XSLX format"
            }
        },
        "/analyses/{analysis_id}": {
            "delete": {
                "description": "",
                "responses": {
                    "204": {
                        "content": {},
                        "description": "Successful operation"
                    },
                    "403": {
                        "content": {},
                        "description": "Insufficient rights"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    },
                    "409": {
                        "content": {},
                        "description": "Analysis is still running"
                    }
                },
                "summary": "Delete an analysis"
            },
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "created_at": {
                                            "format": "date-time",
                                            "title": "Created At",
                                            "type": "string"
                                        },
                                        "files": {
                                            "items": {
                                                "$ref": "#/components/schemas/AnalysisFile"
                                            },
                                            "title": "Files",
                                            "type": "array"
                                        },
                                        "id": {
                                            "title": "Id",
                                            "type": "string"
                                        },
                                        "index": {
                                            "$ref": "#/components/schemas/IndexMinimal"
                                        },
                                        "job": {
                                            "$ref": "#/components/schemas/JobMinimal"
                                        },
                                        "ready": {
                                            "title": "Ready",
                                            "type": "boolean"
                                        },
                                        "reference": {
                                            "$ref": "#/components/schemas/ReferenceMinimal"
                                        },
                                        "results": {
                                            "title": "Results",
                                            "type": "object"
                                        },
                                        "sample": {
                                            "$ref": "#/components/schemas/AnalysisSample"
                                        },
                                        "subtractions": {
                                            "items": {
                                                "$ref": "#/components/schemas/SubtractionMinimal"
                                            },
                                            "title": "Subtractions",
                                            "type": "array"
                                        },
                                        "updated_at": {
                                            "format": "date-time",
                                            "title": "Updated At",
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserMinimal"
                                        },
                                        "workflow": {
                                            "title": "Workflow",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "created_at",
                                        "id",
                                        "index",
                                        "job",
                                        "ready",
                                        "reference",
                                        "sample",
                                        "subtractions",
                                        "updated_at",
                                        "user",
                                        "workflow",
                                        "files"
                                    ],
                                    "title": "Analysis",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "content": {},
                        "description": "Parent sample does not exist"
                    },
                    "403": {
                        "content": {},
                        "description": "Insufficient rights"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    }
                },
                "summary": "Get the details of an analysis"
            }
        },
        "/analyses/{analysis_id}/files/{upload_id}": {
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful operation"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    }
                },
                "summary": "Download a file generated during the analysis"
            }
        },
        "/analyses/{analysis_id}/{sequence_index}/blast": {
            "put": {
                "description": "BLAST data will be attached to that sequence.",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Operation successful"
                    },
                    "400": {
                        "content": {},
                        "description": "Parent sample does not exist"
                    },
                    "403": {
                        "content": {},
                        "description": "Insufficient rights"
                    },
                    "404": {
                        "content": {},
                        "description": "Sequence not found"
                    },
                    "409": {
                        "content": {},
                        "description": "Analysis is still running"
                    }
                },
                "summary": "BLAST a contig sequence that is part of a NuVs result record. The resulting"
            }
        },
        "/groups": {
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "example": [
                                            {
                                                "id": "technicians",
                                                "name": "technicians"
                                            },
                                            {
                                                "id": "sidney",
                                                "name": "sidney"
                                            }
                                        ],
                                        "properties": {
                                            "id": {
                                                "title": "Id",
                                                "type": "string"
                                            },
                                            "name": {
                                                "minLength": 1,
                                                "title": "Name",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "id"
                                        ],
                                        "title": "GetGroupResponse",
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "List all existing user groups"
            },
            "post": {
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A schema for requests to create groups.",
                                "example": {
                                    "group_id": "research"
                                },
                                "properties": {
                                    "group_id": {
                                        "description": "a unique id for the group",
                                        "minLength": 1,
                                        "title": "Group Id",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "group_id"
                                ],
                                "title": "CreateGroupSchema",
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "id": "research",
                                        "name": "research",
                                        "permissions": {
                                            "cancel_job": true,
                                            "create_ref": false,
                                            "create_sample": true,
                                            "modify_hmm": false,
                                            "modify_subtraction": false,
                                            "remove_file": false,
                                            "remove_job": true,
                                            "upload_file": true
                                        },
                                        "users": []
                                    },
                                    "properties": {
                                        "id": {
                                            "title": "Id",
                                            "type": "string"
                                        },
                                        "name": {
                                            "minLength": 1,
                                            "title": "Name",
                                            "type": "string"
                                        },
                                        "permissions": {
                                            "$ref": "#/components/schemas/Permissions"
                                        },
                                        "users": {
                                            "items": {
                                                "$ref": "#/components/schemas/UserMinimal"
                                            },
                                            "title": "Users",
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "permissions",
                                        "users"
                                    ],
                                    "title": "CreateGroupResponse",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "content": {},
                        "description": "Group already exists"
                    }
                },
                "summary": "Create a new group. New groups have no permissions"
            }
        },
        "/groups/{group_id}": {
            "delete": {
                "description": "",
                "responses": {
                    "204": {
                        "content": {},
                        "description": "No content"
                    },
                    "404": {
                        "content": {},
                        "description": "Group not found"
                    }
                },
                "summary": "Delete a group"
            },
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "id": "technicians",
                                        "name": "technicians",
                                        "permissions": {
                                            "cancel_job": true,
                                            "create_ref": false,
                                            "create_sample": true,
                                            "modify_hmm": false,
                                            "modify_subtraction": false,
                                            "remove_file": false,
                                            "remove_job": true,
                                            "upload_file": true
                                        },
                                        "users": [
                                            {
                                                "administrator": false,
                                                "b2c": null,
                                                "b2c_display_name": null,
                                                "b2c_family_name": null,
                                                "b2c_given_name": null,
                                                "b2c_oid": null,
                                                "handle": "leeashley",
                                                "id": "7CtBo2yG"
                                            }
                                        ]
                                    },
                                    "properties": {
                                        "id": {
                                            "title": "Id",
                                            "type": "string"
                                        },
                                        "name": {
                                            "minLength": 1,
                                            "title": "Name",
                                            "type": "string"
                                        },
                                        "permissions": {
                                            "$ref": "#/components/schemas/Permissions"
                                        },
                                        "users": {
                                            "items": {
                                                "$ref": "#/components/schemas/UserMinimal"
                                            },
                                            "title": "Users",
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "permissions",
                                        "users"
                                    ],
                                    "title": "GroupResponse",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "404": {
                        "content": {},
                        "description": "Group not found"
                    }
                },
                "summary": "Get the complete representation of a single user group"
            },
            "patch": {
                "description": "Unset permissions will retain their previous setting.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Used when updating permissions.",
                                "example": {
                                    "permissions": {
                                        "create_ref": true
                                    }
                                },
                                "properties": {
                                    "permissions": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/EditPermissionsSchema"
                                            }
                                        ],
                                        "default": {},
                                        "description": "a permission update comprising an object keyed by permissions with boolean values",
                                        "title": "Permissions"
                                    }
                                },
                                "title": "EditGroupSchema",
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "id": "technicians",
                                        "name": "technicians",
                                        "permissions": {
                                            "cancel_job": true,
                                            "create_ref": true,
                                            "create_sample": true,
                                            "modify_hmm": false,
                                            "modify_subtraction": false,
                                            "remove_file": false,
                                            "remove_job": true,
                                            "upload_file": true
                                        },
                                        "users": [
                                            {
                                                "administrator": false,
                                                "b2c": null,
                                                "b2c_display_name": null,
                                                "b2c_family_name": null,
                                                "b2c_given_name": null,
                                                "b2c_oid": null,
                                                "handle": "leeashley",
                                                "id": "7CtBo2yG"
                                            }
                                        ]
                                    },
                                    "properties": {
                                        "id": {
                                            "title": "Id",
                                            "type": "string"
                                        },
                                        "name": {
                                            "minLength": 1,
                                            "title": "Name",
                                            "type": "string"
                                        },
                                        "permissions": {
                                            "$ref": "#/components/schemas/Permissions"
                                        },
                                        "users": {
                                            "items": {
                                                "$ref": "#/components/schemas/UserMinimal"
                                            },
                                            "title": "Users",
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "permissions",
                                        "users"
                                    ],
                                    "title": "GroupResponse",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "404": {
                        "content": {},
                        "description": "Group not found"
                    }
                },
                "summary": "Update the permissions of a group"
            }
        },
        "/history": {
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "example": [
                                            {
                                                "created_at": "2022-01-28T23:28:53.881000Z",
                                                "description": "Removed Betaflexivirus from Camelia #1 (BFV_CAM1)",
                                                "id": "1wfc5x6e.removed",
                                                "index": {
                                                    "id": "s7frhn8n",
                                                    "version": 1
                                                },
                                                "method_name": "remove",
                                                "otu": {
                                                    "id": "1wfc5x6e",
                                                    "name": "Betaflexivirus from Camelia #1",
                                                    "version": "removed"
                                                },
                                                "reference": {
                                                    "id": "pat6xdn3"
                                                },
                                                "user": {
                                                    "administrator": true,
                                                    "handle": "igboyes",
                                                    "id": "igboyes"
                                                }
                                            }
                                        ],
                                        "properties": {
                                            "created_at": {
                                                "format": "date-time",
                                                "title": "Created At",
                                                "type": "string"
                                            },
                                            "description": {
                                                "title": "Description",
                                                "type": "string"
                                            },
                                            "id": {
                                                "title": "Id",
                                                "type": "string"
                                            },
                                            "index": {
                                                "$ref": "#/components/schemas/HistoryIndex"
                                            },
                                            "method_name": {
                                                "$ref": "#/components/schemas/HistoryMethod"
                                            },
                                            "otu": {
                                                "$ref": "#/components/schemas/HistoryOTU"
                                            },
                                            "reference": {
                                                "$ref": "#/components/schemas/ReferenceNested"
                                            },
                                            "user": {
                                                "$ref": "#/components/schemas/UserMinimal"
                                            }
                                        },
                                        "required": [
                                            "created_at",
                                            "description",
                                            "id",
                                            "index",
                                            "method_name",
                                            "otu",
                                            "reference",
                                            "user"
                                        ],
                                        "title": "GetHistoryResponse",
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Successful Operation"
                    },
                    "422": {
                        "content": {},
                        "description": "Invalid query"
                    }
                },
                "summary": "Get a list of change documents"
            }
        },
        "/history/{change_id}": {
            "delete": {
                "description": "any subsequent changes.",
                "responses": {
                    "204": {
                        "content": {},
                        "description": "Successful Operation"
                    },
                    "403": {
                        "content": {},
                        "description": "Insufficient Rights"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    },
                    "409": {
                        "content": {},
                        "description": "Not unbuilt"
                    }
                },
                "summary": "Remove the change document with the given ``change_id`` and"
            },
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "created_at": "2022-01-28T23:28:53.881000Z",
                                        "description": "Removed Betaflexivirus from Camelia #1 (BFV_CAM1)",
                                        "diff": {
                                            "_id": "1wfc5x6e",
                                            "abbreviation": "BFV_CAM1",
                                            "created_at": "2021-12-09T01:32:35.390000Z",
                                            "imported": true,
                                            "isolates": [
                                                {
                                                    "default": false,
                                                    "id": "714d1ea9",
                                                    "sequences": [
                                                        {
                                                            "_id": "eukvplhn",
                                                            "accession": "16SP043_BFV_CAM1",
                                                            "definition": "Betaflexivirus, complete genome",
                                                            "host": "Camelia",
                                                            "isolate_id": "714d1ea9",
                                                            "otu_id": "1wfc5x6e",
                                                            "reference": {
                                                                "id": "pat6xdn3"
                                                            },
                                                            "remote": {
                                                                "id": "g84vd2rm"
                                                            },
                                                            "segment": "",
                                                            "sequence": "TTCAGAAATCAACTCAACCTGTTGTGAGTACCCATCACATCAAAGCAATGGCTTCAGTGATGATAAGAACTCCTATGGAAAAGTTTTTTTCAGCAAATGACAAGAATGATCAAAAAATAATTCTTACGTCTGGAGTGAATTATGTTAAAAAATTTTGTGATGAGCAGGGTTTACACTTTGCATACTCAGTGGATGAGAGGAAAAAGGCTGCACTGACCAATCTTGGCATTAATTTGCATCCAGTGCCCTTTTTACCTCATTCACACCCTTTTTGCAAAATTCTTGAAAATAACCAGCTCATCAACATCCTACCAGGGATATTAGGTAGTGGTAGATGGACATTTATGTCAATTAAAGAAGGAAAAGTAGAAAGTATTATAAAAAAAAGTGGAGGTGTAAATAATAATATTAGTTTAATTAATAGATGTATATGTGCAAAAGATTTTTCAAGGTATGATTTCACCCCTGAAGAAGTTGATTTGAGAACAAATGTTCTCTCTGAGGATCATTTATTTCCAGAGAATCTGATGAGAAGCCTCAAAGGGAAAAAGATTTTTATACATGATGAGGTTCATCACTGGAATTCAAAAATCATGATCAACTTTCTGGAGAAAGTCAAACCTAAGATAATCTTTTGTTCAGTCGTTTATCCGCCAGAATTATTGGCTGGAATATTGGAACCTCAAAATAAAAGTTTTTATGATTTTAAGGTTGATGGTGATAAATTATTTTTTTTTCCAGATGGCAATAGGAGTGAATTTTATGAGCAGCCAAAGGATCTTGGTTGGCTAATGCTTGCAAAGAAATTCAAGCTCAATGACTGCAATTACACTGTTAAATTAATCAGCAGCACTTACTGCCATCACTTATTTCAAATATCTAGAGGTGAGAAGATAACTGAATCAAAGAGATTCTTCTCAGACTTTGATACCATTGACCTCAAAGTTATACACAATGAGAGGTTCAGATACTACGATCACATCCCCATAAGAAGGGCACATCTTGAGAAAGTGTACACATACTTGATGTGTCTTAAAAAACCGGATGTTGAATCAGCCATTGCAAAACTACGCCAACTTATGGAGGATGAGCAGGACACCAGAGTTGTGGCTTTTTTCTGCAAATTTGCAAGGGATGTGATTGAGAAATTCAAGGGAAAGATACATCTGTATGAAACGGGGTGGTTGAGTCAAATTGGAGACAATTTCATACAGATGCTTCCAAATTTCTGGGGGAGGATATTGTCAAGGTGGCATGGATTGAATCTTTTTGACTTCTTGTTCAAGCTTGATAACTTGAGAATTGAGGTTGAGTTGATTGACGTGGATGCTGAGTACTCATCGAGAAGTGAGGTCCTTAAACGCTTGTTTAAGAAGGATCAATTTAGTGAAAATTTTGATGGGCTTAATGTTGAGTACCTCAGAACTATTGGTCTTGAGGTCGAGATGGATGACGCATGGAGCAAGGGTTTCTCATCAAAAAAAAATAACTCAATTCATGCCTGCATCTCAAAATTTGGTGTTGAGAGAGTATCCAGCAAGGCCTTTGAAAGTAAACTCATCTCAAGATTTCATCTCAAAGTTGGCATTCTTGCCTTACTGCACAGGAGAAATGGAAATGGGAAGTCCTTGTTGAAAGGAGCACCTGTGAACCCAGATTCTAAGCAGGAAAAGAAAGGTATTTTAATGATCAAGCTCAGGTCAGATGACAAGGTTGAATCATATCCAGAGCCTTTTTTCTTAAATTTGAGAAATTTTTCATCAAAAGAATGTCCATTTGAAGATTTACGATGGATGAGAGTTCATAACAAGATTTGGGGTGGAACTTTCGGCACCCCATTAATACCAAGTGACTCACCATTGGAAGGAGATGAGGATGTTGACGTTTGTGTCATGGTGGACGAATTAGGATATGATAATGATGTCCAAGATGAGCAATGTGTCAAAAATTTGGAAATTCTTGAGATGGATGAAATTTTGAATGATTCCAACCCCAATATGAATGTGACTTCAACTGAAGTCAAACAAGATGATAAAAGGGAAGATTGCCAGCTCAATTTGATTGAATCCAGCGAAGTGGAAACTTCCAAATTCATGTCAGAGCTTGAGGACTCTGTATATCTCAGTTTCCATGATGATGAAACATTTAATTACTCAAATGTGCCAATAATAGGAGATGGCAATTGTTTTTTTAGAGCCATTTGCATGTCAGTGCATGGAAATGACTTTGGTCATCTTGAAACTAGGAAAAAATTTTCTGAACATGCAAGAAAAATTGGATTCAAATTTAATGCTGAAATTGAGGAGGCAATCACCAAGGATGGCACTTTCTCTGACACATGGATGGTCAATCTCTTTGCAAATGTTATGAATGTTAGACTCTTCATTCATGAAACAGAGGATGGTCCTTACTATGAGATTCACCCAACAATCATCAAGTATGATGACCCCCCAGTGTTCACAGTTAGATTACTATTTAGGGACGCACACTTTACTCTTTTGAAAGAGGAAAAGAGTGAGACTTGTGAAACGCTTAAGAAAGAGTTTTTGATTGATTGGGGGGAGAATGAATTCAGAGCTCTTAATGAATTTGTTGACTTGATAGTGGCTGAGCAGCAAAGGTTCAAGGCCAATAACTTCAAATCAAGGAAGGCCTTCTTTTTCTCTGAGCACGAGGGCATTGACTATGGGCATGATAAAGTTAAGTACCATCGGAATCAGATTGATTCAATTGACAGTCTTCTGCCCAGAGGAATGAATTGTGGTTTCAATTCAATGCTTGTGCAGATCTACGCTGATGGTGCTGAATTGCCAATGCACAGAGATGATGAGAAGGTTTATGACAATGACAACATCCTTTCCATCAATCTCAGGGGAGACTGCAAATTCATAATTAATGAGTCAAAAAAAGGGGCTAGCAATGTCAGGTCAATTGAGATGAAGCAAGGGGCTTATATAGTAATGTTAAGTGGCTTTCAAAAAAAATTCAAACATGGGGTTTCTGAATGTAGAAATGGGCGTGTGAATGTCACATTCAGAAGGCATGTGAGAAGTATGAGGGGTCATGACTTGATTGATTTTGATCTTTCCAAAATTAAAAATGGGTGTTTAATAAGGTCAATTGCAAATGCTGAATGCAGAGGACTGAATCAAGTTGTCCAGGCCTTGATCAGAAAGGATAGAGCCTTTTGGAGTGATTGGATTCATTCAGGGCAGGGGGGGACGATAGATGATCTAGTCAAAGCTGCCACTGAACTTCATTTCTCATTTGATCTAATTACTGAAAAGGGGTGTGACTCTTTTAAAAATTCCGGGCCCAAATTCACATTCCAACTTAAAAATGGTCATTTTGAAAGTATTAATGAAAGACCTTCATGTGTGGAAATGACCTTCCTGAATATGAGATCAAAAGGAAAAAAAAGTGGGAAAGGCATTGAAAAGCTCAAGTTCGAGCACATGAATGAAACAAATTTTGAGATTGTCGGAGAATTTGCCGCAATCCTTAAAAGATCATTCATGGAGCGAACAACAGGTCTAATTCTCTCCGAATGTTATGGCTCTGCATGCAAGAATCTTGAAGATTTGCAAATAGATCCAAGCAGTCAATTTGAGAAGAGAATTGACTTTATCTGTGGCTTTGCGGGGTCAGGAAAGAGCTTTTCAATTCAGTGCAAACTTGCATCGGAGCCTAAAGCTGATTTCTTGGTTATATGTCCCAGGAATGAACTCAAAAAAGATTGGCTTGAAAAAATCAATTGCAGTGAGAAAAAAGTTAGGACATTTGAAGTAGCCTTAACGCTCAACCTTTCAAAGATTGAATTGATTGTGATAGATGAACTGGGCTTGTTTCCAAATGGGTATCTCGATTTGCTGTGTCTAATGCTAACAAACCAGGGCAATTACAATTGCCAAGTGGTATGTTTGTTCGACCCTTTACAAGCGAGGTACCACAGTGATCTTGATGATTCTCTTTTAGATTTTCAGCATGACTGTGATAGGCTGATTGCTGATTGTGAATATCTGTACCTTGCAGAAAGTAGGAGGTTATCAAGCAAGTTCTTTGGAGCTTTCTTTCCAGACATCCACCTGCACAATGAAGGGAAAGAAGATCTAAGCATAACAATATTTGATAGTGTTGTTGTGGCGATAAATGAAATGAAAAAGAAAGAAACTCCAATCGACTTGGTGCTGGTTGCCTCAAGAGATGAAAAAAAGGCGCTGGCAACATCTGTTCGAACATTAACATTTGGGGAAGCTCAAGGCCTCACAGTCAATTATGCTTGTATTGTACTCTCTGAGTACTCAGAAAAGCAAGACGACCTACGGTGGATGGTAGCACTGACAAGGGCAAGGATCAAAATAGTCTTTGTATGTATGTACAGGGGAGGTCCAAGTTGCTTTTTACAAAACAATACATCCAGGTTAATAGGTCTGTTTCTGAGACAATCACCCATGACTATAAACAGGATGAAATTGATGGTCAAGGGTGATTTGATACCTTTTAGAAAGACAATAGGTTGTTCAGATGAAATGGATAGAGAGGAGAGATTGGAAGGAGACCCTTTTCTTAAACCACTGATTTTTCTTGGTAGTAGGATCAATTCAGAACAGGTTGAAGTTCTGGAGCCAGAAGTTGTTGAACCAATTGAGATGACTCACATCCCATTACCCCCAAGCCATTTTGATCAAAGCATTAATTTTGACAGAATTAGAGCACGTGAGCATAGGGAGTTCAGGATGTATTCAATGTGTACAAAGCAGTTTTGTGAGGATTTTGAACATTCAAGAGCCTCGGGGAAGCAGATGACACCAGGTCCTATGAGATTCGAAGCAATCTACCCAAGACATAAAGCAGATGATGACCTGACCTTTTGGATGGCTGTCAAGAAGAGGTTGCGCTTTTCCGAGGAGTTTGTTGAAAGAGCAAAACTTAAAGAAGCAATGGGAGTTGGGGGTTTGTTGTATTCAAACTTCAAGGAGACATTGGGTTTGAAGTTCAATTGGGATCAGAAGCTCCTTGACGAGTGCGTCAATGACTTTGAAGAGAAGAAACTTAGCAAAAGCAAGGCAACTCTACAAGCTCATAGCTCAAGATCTGACTCAGACTGGAAATTGGATCATATCTTTCTGTTCATGAAATCCCAATTGTGCACAAAATTTGAAAAGCAGTATGTTGACGCAAAAGCCGGGCAAACATTGGCTTGTTTTGCACACTGCATTTTAGTCAAGTTTGCGCCTTATTGCAGATACATGGAAAAACAATTGAGAAATCAATTTCCAGATAACATATACATTCACTCAGGAAAGAACTTCAATGATCTTAATCAGTGGGTTAAAGAGAACATGAAGGGGAAGGAATGTATAGAGTCAGACTATGAAGCATTCGATGCGAGTCAAGATGAATACATACTGGCCTTTGAAATATGCCTCATGGAGGATATGGGGATGCCAACTTGGTTCATCAATGATTATATAGATCTTAAATGCACACTTGGGTGCAAATTGGGCCACTTTGCCATTATGAGATTCACTGGTGAGTTTAGCACCTTTCTATTCAACACATTGGCAAACATGGCCTTCACATATGCCAGATATGATTGTGATGCATCAACTCCAATTGCCTTTGCTGGAGATGACATGTGCATGCTTGACAATTGTGCCGAGACTGACAAATTCGAAGGAATTTTTGAGAAAATATCACTGAAGGCGAAGGTTTTGAGGTCATGTACACCTATGTTTTGTGGGTGGAATTTGTGCAAGTATGGAATCTTCAAGGAACCGGCTCTAGTTTATAATAGATTTATGGTTGCTCAGGAAAGGGGTAATGTAGAGGAGTGCCTTGAGAATTATGCAATAGAGGTTTCCTATGCTTACATGTTAGGTGAGAAGCTCTATGAATTTTTGAAAGAAGAAGAGAGAATTAACTATCATCAAAGCGTAGTGAGATTCATAATTAAAAGAGCATATAAACTCAAGACCAAAGTGCGGCTTCTGTACACCAGTGATGGCGAAAGCAATTAGAGTTAAGAGCCTCACCAATCGGCTAGAGGTTGACAAATCTCTGCTCAATTCAAATGAAGTCTCAGCTCTGTATGGTGGTGCCTTTGCACCACTAGTTTTTAAGGATGAGGTTAAAATGGTAATTCCTGGCAACCTACTGGGCGGGCCAATTCGTCTACAGGCAAACATACTCACAAAGTCAAGACTCGAAAAAATTCGCAGCCAAAAATTTAAAGGAAACTCATGTGCTTATCTGCATCTTGGGGTGGTCACCATTGTTATACAATCACTGCTGGTGTCTGGCAATGAAAATGTCAGAGGCAGGTGCTCATTGGTTGATCTTTCAAGGGGCTCTGAAATGACTGGGCTCATTGACAAATTCAAGTTCAGCTTTACTAAAAACGAACCTTTCGCTGCAAAAATGTTGACAATAAATGCAGCAATTGATATTGACTGCGAGGTGTCTGCTGGAAGTATTCAGGCTCTCCTTGAAGTTGAAGGCATTGATGTCAGATCTGAGAGGAGTGTTCTAGCCATCACCACTGGGATAACCTGTGTTCCAACTAACTCCATGGTAATGTTGCCAGGTCTGAAAAGAGAAACCCCGAAGTTTGCAATTGCGAATGTTTACAATGTTCCTGATGAAGATCCAACTGAATGCGAGGCGTTTAACAGATTATTTGGAGCCGCTAATCCAAAGTTGATTGATTTGGGTAGTGAGACTGTGTTGGAAGAAGGGAAGAGATTTGGCCTATGGGGACCTGTCGTTAAACCAGTACACAGAAGGAAGCTCGTGACAAAAGGCATTATCAAGGATCACATGAGCCAATTTATGTCAGGCCCTTCCAAAGATTTGAAAATAGAAGAAGGTTTGGAAAGGTCAAGCTCATTACGTGTTGAAAATGTCTGCGAAACTGGCAAAGAAGAGGCTGATACACGACGAAGTGTCGGAATGGATTTTCAGGAGTTTCGTGGACCAGATAATTCAATGGGGGTTGTTGCTGGTAAATGCTGGGAATCAGAGAGTTCAGCTGAATTTAAACCAACAGGAGCAGAAATCAAGAGTTCAGAACAGCAGACTCCGGACGATTTTTGGCAATATAGCAGATCACTCAGCAGGGCCAGCAACAGTGTACCCGTCAATCAGTGTAAGTTATCAGGTGATGAACATTCAGGGAATCGAAGGTGTTGCACAGATGGATGGAAATTTCAATCTGAGAACATTGGTGGAAAATCTGAAGACCTTCCTTCTGACCAGCCAGGATCCTCAGCTCAACACTGCAACATTAAGGGAGGTCTGCCGGAGCTTTGCAAACTACGCCCTTGAGTACTACATGGAAGACCCCGACAGGATGTCCAATCTAGCTGACAAAATGCCACAACTAGCTCTGCAGGCGAGGGAGGTCATGTTTGACTTTTCTGATGGAATAAGTCAGCAATATTTGAGGGGTTTTCCAATGAGGGCTAAGGTTATACAGGAATTGAATAGTAGGCTTCTGCAGTCCACTGGCACCAAGGCTGTGTTTGAAGCAAGGGGCACAGTTGAGTCCTCAGTTAATTTGATTGTTTAAGGAAACAATACAGGCTTTGTCATTTGAGTGCTGTGAGTTCAAATGATACCTTATAAGTCAGATTCATCTGCACAGGTAAGTTTCAACCTCTTTGTATTTAAAGAGTGGCCGAGTGAGTGTACGCTCATGTTCGGAGATTAGCTTCCCAGCTTTATCAAATATTATGACTTAAGTATTAATAGGGATGTCTTTTATGAAT"
                                                        }
                                                    ],
                                                    "source_name": "16SP043",
                                                    "source_type": "internal"
                                                },
                                                {
                                                    "default": true,
                                                    "id": "950197de",
                                                    "sequences": [
                                                        {
                                                            "_id": "5oydqvv1",
                                                            "accession": "16SP042_BFV_CAM1_B",
                                                            "definition": "Betaflexivirus, complete genome",
                                                            "host": "Camelia",
                                                            "isolate_id": "950197de",
                                                            "otu_id": "1wfc5x6e",
                                                            "reference": {
                                                                "id": "pat6xdn3"
                                                            },
                                                            "remote": {
                                                                "id": "nkun91us"
                                                            },
                                                            "segment": "",
                                                            "sequence": "GTTGAAAATAATATTAGTGTAGTAAATACGAAAACAAACACACATAACTAACACTTGAACTTGAATTCATCTCCCAACGGTACCCATCAGTGTAAGTCCAATGGCATCAGTGATGATAAGAACCCCTCTGGAGAAATTCTTTTCTGCCAATGATAAGGCTGACCAAAAGGTCATCCTTACATCTGGAGTTAGTTATGTAAAAAAATATTGTGATGATAAAGGTCTGCATTTTGCCTATTACCTTGATGAAAGGAAGAAAAAGGCAATCACAGATCTTGGAATTAATTTGCATCCCGTACCCTTTCTGGCACATTCACACCCATTCTGTAAAGTTCTTGAAAACAATCAGCTTGTCAACATTTTGCCAGGTCTGCTTGGCTCAGGCAAATGGGTATTTATGTCCATTAAAGAAGGAAAGGTGGAGCAAATTATTAAAAAAAGTGGAGGAGTTGAAAATAATATTAGTGTAGTAAATAGATGTATATGTGCTAAGGATTTCTCTAGATACGACTTCACACCTAATGAGGTCGATATTCGGCGAAACTCCATTAAAGGTGACCACCTTTTTCCAGAAAATTTAATGCGGAGCCTTAAAGGAAAGAAAATCTTCATTCATGATGAAGTTCATCATTGGAATTCCAAGCAGATGATTGATTTTTTGGAAAGGGTTTCACCTACAATATTATATTGTTCAGTAGTTTACCCACCTGAGCTTTTGGGTGGGATCACCACCCCTCAAAATAAGACCTTTTATGATTTTAAAGTTGAAGGGGACAAACTTTATTTTTTTCCTGACGGTAATCGGAGTGAATTCTATGAACAACCTGCTGATCTCAAATGGTTGCTCATGGCTAAAAGGTTCATTTTGAAGGACTCTGAGTACACTGTCAAAATGCTCAGTAGCACTTATTGTCATCACCTTATCCAAATTTCAAAAGGGGCCAAAATCACGGAATCAAAACGGTTTTTCTCAAACTTTGATACCATTGATTTGAAGGTCATACACAAAGAAAGGTTTAGGTATTATGATGACATTCCAATTCGGAAACTGCACCTTGAGAAGGTTTACACTTATTTGATGTGTCTTAAAAAACCAGATGTTGAATCAGCCATTGCTAAGCTGAGGCAGCTTATGGAGGATGAACAAGACACAAGGGTTGTTGCCTTTTTTTGCAAATTTGCAAAGGATATAATTGACAGATTCAAAGGCAAAATACATCTTTATGAAACTGGATGGTTTGAGCACATTAAAGACTCATTTGTAAAGATGTTGCCCAACTTTTGGGGTAGATTGCTCTCAAGGTGGCACGGCGTTAATCTTTTCGAGTTTCTATTTAAGCTGGAATGCTTATGCATAGAGGTTGAATTGATTGACGTTGATTCTAGTTTCTCAGTCAAGGAATCCCTCAAGGATAGAGTTTTGGGCAGATCTGAGGGATGCAGTGCCGAGCTACAAAATTTGTATATGCAGGAGTTTGGTCCTTCAGCCATGCTAGAAGTAGGCTGGCATGGCAATCTTAAAAAGGTCATGAAGGATGTTGAAGAGAAAAACTTGATTAAAAATGGCAGATTATCCATCCGTGAAAAAGCATATTCTTCAAAGTTACTAAGCAGGTTCCATTTGAGAGTTGGAATTCTTAAGTATATTGGTGTTCAAAATAGAATAGGGGAAAGGAATGAGTTAAAACTTAGAACACCAATGATCAAGATGCACAATTCTGATGGCATTTACTCCTATCCAGAACCTGAATTCATCAGAGATGAGGGGTTCACCTCATTTGAATGTGAGTACAGCAACCTTAGGTGGCTGAATGTTCATAGAAACCTTTGGTTCAACAATTTGGAATTAGGGGTTGACGTTTGTGATGTTCATGAGCCACAAGTCACCAATTCTGAGGACTTGTCTTCCGCTGAAAACCTTTTAGAGGTCATTGAAGTGGATGATGAGTTCTTTCCCTCAAACATGAAAGAGACTGTTGAGGTGGCTAAAGAAACTGGTACTCTCAGAGAGAAAAGTGACCCTATGAGGCAAAGTTCATCTGAAGTTTTGGATGATGAGCTGATTCGTGAACTTGATGGATCTGTGACCATAATTCACAATTTTACAGAGGAGTTGTTGGTTAAAAAAGATGTGCTTGGAGATGGTAACTGCTTTTACAGAGCACTGAGGCTCAAATTAACTGGGAGTCAGGAGGGCCATGAGGAGGTCAGATTGAAATTTGCAAATCATGCTAGTCATATTGGCTTTAATTTGTCTACAAACATGAGAAATATGATCATCACGCCAGGTGTTTTTACTGAGACGTGGATGGTGAATCTTTTTGTGAATGTTATGAATATAGACATCATGATTCATGAGGACATGAGTGGCAATTACTACTCAATCAAACCCAACCTGATTCATTATGATGAAACCCCAAAAATCCAAATAAGATTGCTTTTTGAAAATTCTCACTTTGCATTGCTGGAGTCAGCAGACAAGTATGAAGAGAAAATGGATTTGGACTCCAAATCTTTTGAGGCAAAGTATCTCATTAAAAGTGGGTTTGGAGATTTTGAAGCTATTAGAACTTTAGTTGAAGATCTTGTCAGCAGGGTGAAAGAATACAAATTCAATGAGTTTAAAGGAAGGAGGGCTTATTTCTTCTCTGAAAATGAAAGCATTGATTATGCACATGGGAAGACCAAATATTTGAGAAATCAATTTGACTCTGTCAACGAATTACTTCCCATTGAATTGAAAGGGAAATTCAATGCCTTTCTGCTCCAAATTTTTGAAGAGGATGGAGAGATAGGGTTCCATAGAGACAATGAAGGTGTGTATGACAATGACAACATTCTTTCAATCAATCTCAATGGTTGTGCATCCTTCATGATTGAAGACTGTGGCAGCAAGGAAATCTATGAAATCAAAATGACTGATGGTTTATTCATTTCAATGCTTCCTGGATTTCAAAAGAAGTTCCGTCACGGTGTCACCAATTGTTCGTCAAAAAGAGTTAATATCACTTTCCGAAACCATGTTAGATCGGTCAATGGCAGGCCTGTAATTGAAATTGACCTTTCTGAAATAAGAAATGGTTGCATGCTTAGAGCAATAGCTGATGCTGAAAAGCGCAGCTTAGGGCAGGTTGTGCATGCATTATTTAAAAAAGATCGTGACTTTTGGAAGATGTGGATTTCAGAAGCAAAGGGTGGCACAATTGAAGATATGATGAAAGCAGCCATTGACCTCAAATTTTCATTCGAACTTTTGAGTGATGGCAAGTGTGAAATCTTTGGAACTTCAGGTCCAAAACTCAATTTCGAGTTAAAGGGGGGACACTTTTCAGTCATGGATTCAAGACCTTCATGTGTAGAGAGGACCTTCTTAAATTCAAACACCTCAAGGAGAGGGTCATCTAAACATTTGGGTGAGATGGACCTTGAATATTTGAATAATACCAACTTTGAAGCAAAGGGAATTTTTGCGAACCAACTCCAGATATCCTTTCTGGAACGTACTACTGGTCTAATTTTGTCAGAGGTTTACGGTTCAGCTGGGAAAAATTTGGAATTGGTTAAGATCAACAGGGAGAACATGATTGAAAAGGAAATTAATTTTATGTGTGGATTTGCAGGATCTGGGAAGAGTTATTCCTTACAACAGAGGGTTAAACAGAGCCTGGATGCTGAATTCCTCATAATATGCCCAAGAAATGAGCTCAAGAAGGATTGGTTGAGTAAGTTGAATTGCAATGAGAAAAAAGTGAGAACATTTGAAGTTGCATTAACTCTCAATTTATCCAAATTGGACTTGATAATTATTGATGAGCTTGGCCTTTTCCCAAATGGTTATCTAGATTTAATTTGCTATATGCTTGCGGATCAAGGTAATCATGACTGTAAGATCATGTGTCTGTTCGACCCTTTGCAATCTAGATACCATAGCGACCTAGACAACCATCTTTTGGATTTTGACCATGAATGCGACAGATTGATAGATGGTCTTGATTTTAACTATTTGATGGAGAGTAGGAGAATGTCCAAATCATTCTTTGGAGCCTTCTTTAGAGATGTAACTTTATACAACGAGGGTGATCAAAACTTCAAATTGGAGGTGTATGATTCAGTCATCGTTGCCATAAATGAAGGAAAGAAAAAGGGCATTGAGGTCGATCTGATACTAGTTGCATCCAGAGATGAGAAAAGAGCATTATCTTGTTCTGTCAATACATTGACATTTGGAGAAGCACAAGGTTTGACGGTGAACCATGCATGCATTGTGCTTTCAGAATATGCAGAGAAACAAGATGATTTCAGATGGATGGTCGCATTAACTAGGTCCAGAATAAAGGTCAGCTTTGCGGTCATGTACAGAGGTGGATTAGTGAGTTTTGTTCAAAATAACTCAGCAAGATTGATTGGCCTGTTTATGGCTCAATCACCACTAACCATCAATCGAATGCAATTAATGCTCAAAGGAAACATTAATCCATGCATCAGAAGTCTAGGATGCTCTGATGAGATGGACAGGGAAGAAAGGCTTGAGGGTGATCCCTTTCTAAAACCGCATATATACCTTGGCCAGAGGATCAATGCTGAAGAGTTTGAGGTTTTTGAGCCAGAAGTTGTTGAGCCAATTTGTAGAACGCATATTGAACTACCTCCTGAAAACTTTGATCAAAGCATCAACTTTGATTTAATTAGAGCGAGGGAGTTTCGGGAAATGCGGATTGGAGGTGAGACAACTAAACAATTTTGCGAAGACTTTGAGCATTCTAGAGCAAATGGAAAAAGAATGACTTCAGGTCCAATGAGGTATGAAGCAATATACCCTAGGCACAAAGCCGATGATGATGTGACCTTTTGGATGGCAGTCAAGAAAAGATTGAGATTTTCCGAGGAGCATGTTGAGAGGGCCAAATTGAAAGATGCATTTGGGGTCGGAGGCTTGTTATACGAAAATTTCAAAAGTAAAATGGGACTCAAATTCAACTGGGATCAACAACTTTTGGATGAATGTGTTAACGACTTTGAAGTCAAAAAACTGAGTAAAAGTAAAGCCACTTTGCAAGCTCACAGCTCCAGGTCTGATTCTGACTGGAAGATTGACAACATATTTCTCTTCATGAAATCACAATTGTGCACAAAGTATGAAAAGCAATATGTAGATGCGAAGGCTGGCCAAACGTTGGCGTGCTTTGCTCACATGGTGTTGGTCAAATTTGCGCCATATTGTAGGTATATGGAGAAGCAGTTAAGAAATCAATTTCCAGAGAACATTTATATACATTCAGGGAAGAACTTCAATGACCTTAATGACTGGGTTAAAAGGCATATGTCAGACAATGAATGCATTGAATCGGATTATGAAGCATTTGATGCATGTCAAGATGAGTATATATTGGCATTTGAGGTACTTCTCATGGAAGATATGGGTATGCCAAATTGGTTCATTAATGACTACATTGATCTTAAATGTACTTTGGGTTGCAAATTGGGCCACTTTGCGATCATGAGATTTACTGGTGAGTTTAGCACCTTTTTGTTCAACACCTTGGCAAACATGGCATTTACTTTTGCCAAATATGATTGTGATGGGAAAACACCAATTGCTTTTGCTGGAGATGATATGTGCATGCTTTCAAAATGTGATGAAATCTCAAAATTTGAGAGCGTCTTTGAGAAGATATCACTAAAAGCAAAGGTGGTAATCTCAAAAAATCCAATGTTTTGTGGGTGGAATCTGTGTAAGTATGGAATTTTCAAAGAACCTGCATTGGTGTACAACAGGTTCATGGTTGCAGAGGAAAGGGGAAATGTCAATGAATGCTTAGAAAATTATGCAATTGAAGTTTCCTATGCTTACATGTTAGGTGAGAAGCTCTATGAATTTTTGAAAGAAGAGGATAGGGTCAATTATCATCAAATTGTGGTCAGATACATTGTTAAACACATCGACAAACTCAAAACGAAGGTAAAGGTTCTGTTCTCAGGGAAAGATGTCTAAGGCTGTCAAAGTTAAAAGCCTTGTACAGAGATTGGAAGTTGACAGGTCGTTATTGAACTCAAATGAGATATCCGCTCTGTATGGGGGTGCATTTGCGCCATTGGTCTTTAAAGATGAGGTCAAGATGGTCATCCCTGGTAATCTATTGGGTGGTCCGATTTGTTTGCAAACAAACATTCTAACCAAGTCAAGGCTTGAAAAAATAAGAAGTCAGAAATTCAAAGGGAAGAGCTGTGCTTATTTGCATTTAGGCGTTGTGACAGTCGCTATTCAATCCTTATTAGTTTCCGGCAATGAGAAAATTAAGGGTAGATGCTCGCTTGTTGATTTATCCAGAGGGTCAGAGGAGACTGGCTTAATAGACAGATTCAAGTTTTGCTTCACAAAATCTGAACCTTTTGCTGCAAAAATGTTGACCATCAATGCTGCAATCGATATCGACTGTGATGTATCTGCAGGGAGCTTGCAAGCTCTGCTCGAAGTTGAGGGAATAGATATTCGAACTGAAAGGAGTGTGCTTGCAGTTACTACAGGTATAACGTGTGTGCCAACCAATTCCATGGTGATGCTCCCTGGTTTGAAGAGAGAGACTCCCAAATTCGCAATTGCAAATGTTTATAATGTTTCTGATGAGGACCCGGAAGAACATGCTGCTTTCAATTCATTATTCAGTGCAGCAAATCCAAAGCTGATCGATTTGGGCCAAGAATGCATTTTGGAGGAAGGAAAAAGATTTGGCTTTTGGGGTCCAATGGTTAAGCCAGTTCATAGAAGGAAATTAACAACTCGCGGCTTGATCAGAACTCATATGGATCAAATTATGTCTGGTCCTGGAAAAGATTTGAAAGAAGAAGGAAATTCAAAGTTGTCCAGATCATACTTATCAAGAAATGTCTGCGAAATTGGCAAAGAAGAGGCTCATCCACGACGAAGTGTCGGAATGGCTATGGAGGAGCTTTGTGGACCCAGAAAATTCGATGGGAGTTTGGTTGGTGAATGCAGCAAATCAGCGGGTTCAGTTAAATCTGAATCAGCAGGAGCAAAAATCAAGGGTGCAAGTGAGTCGCCTAAGATCTATTTTTGGGAACATAGCAGATCACTCGGCAGGTCCAGCAACCGTGTACCCGTCAATCAATGTAAGCTTTCAAACTCTGAACATTCAGGGAATAGAAGGAGTTGCACAGATGGATGGGAATTTCAATCTGAGAACACTTGTCGAAAATCTGAAGATGTTTCTGATAACGAGTCAGGATCAGCAGCTGAGCACTGCAACATTGAGGGAGGTTTGCCGGAGCTTTGCAAATTACGCCCTTGAGTATTACTTGGAAGACCCCGACAGAATGTCAAATCTCGCTGACAAAATGCCTCAATTGGCACTGCAGGCTAGAGAAGTTATGTTTGACTTTTCTGATGGCATTAGTCAGCAATTCATAAGGGGTTTTCCAATGAGGGCAAAGGTAATCCAGGAGTTGAATAGCAGGTTGTTACAGTCATCTGGGACAAAAGCTGTGTTTGAAGCAAGGGGCACAGTTGAGTCTTCAGTTAATTTGATTGTTTAAGGAAACAATACAGGCTTTGTCATTTGAGTGCTGTGAGTTCAAATGATACCTTATAAGTCGCTTGCGCACAGGTAAGTTTCTATACCTCTTTGTATTTAAAGAGGAGTCACTTCCTTTGGTAGAATTGCTTTAATTAGCAGTGGGCCGCCAAACAGTGCATTAAGTACTCCCCAACTAAGTAAAATATTATGATATAACTATTAATAGGGATGCCTTTTCAATATTTAGG"
                                                        }
                                                    ],
                                                    "source_name": "16SP042_B",
                                                    "source_type": "internal"
                                                },
                                                {
                                                    "default": false,
                                                    "id": "eb4c1673",
                                                    "sequences": [
                                                        {
                                                            "_id": "yymkrcpy",
                                                            "accession": "16SP042_BFV_CAM1_A",
                                                            "definition": "Betaflexivirus, complete genome",
                                                            "host": "Camelia",
                                                            "isolate_id": "eb4c1673",
                                                            "otu_id": "1wfc5x6e",
                                                            "reference": {
                                                                "id": "pat6xdn3"
                                                            },
                                                            "remote": {
                                                                "id": "u7ni2w4n"
                                                            },
                                                            "segment": "",
                                                            "sequence": "ATCACAAAATACAACAACATAATTCAGAAACTAACTTAACCTGTCGTGAGTACCCATCACATCAAAGCAATGGCTTCAGTGATGATAAGAACTCCTATGGAAAAGTTTTTTTCAGCAAATGACAAGAATGATCAAAAGATCATTCTCACGTCTGGGGTGAATTATGTTAAAAGATTTTGTGATGAGCAGGGTTTACATTTTGCATACTCGGTGGATGAGAGGAAAAAGGCTGCACTGACCAATCTTGGTATTAATTTGCATCCAGTCCCCTTTCTACCTCATTCGCACCCTTTTTGCAAGATCCTTGAAAATAACCAGCTCATTAACATTTTACCAGGGATACTAGGTAGTGGTAGGTGGACGTTTATGTCAATTAAAGAAGGAAAAGTAGAAAGTATAATTAAAAAAAGCGGAGGTGTAAATAATAATATTAGTTTAATCAATAGATGTATATGCGCAAAGGATTTTTCAAGATATGACTTTACTCCCGAAGAGGTTGATTTGAGGACAAATGTCCTCTCTGAAGATCATTTATTTCCTGAAAATCTGATGAGGAGCCTCAAAGGAAAGAAAATATTCATACACGATGAGGTTCATCACTGGGATTCGAAAATTATGATCAACTTTTTAGAGAAAGTTAAACCGAAAATAATCTTTTGCTCAGTTGTTTATCCGCCAGAATTATTAGCTGGCATATTAGAACCTCAGAACAAGAGTTTTTATGACTTTAAGGTGGATGGTAATAAGTTATTCTTTTTCCCTGATGGTAATAGGAGTGAGTTTTATGAACAGCCAAAGGATCTCAGTTGGCTAATGCTCGCAAAAAGATTCAAACTTGATGATTGCAATTACACCGTCAAGTTGATCAGCAGCACCTATTGCCATCATCTGTTTCAAATATCCAGAGGGGAAAAAATAACGGAGTCAAAGAGATTCTTCTCAGACTTTGACACCATTGACCTCAAAGTTATACACAATGAGAGGTTTAGATACTACGATCACATTCCAATAAGAAGAGCACACCTTGAGAAAGTGTACACATATTTGATGTGCTTAAAGAAGCCTGATGTTGAATCGGCTATTGCAAAATTGCGCCAACTTATGGAGGATGAGCAGGACACCAGAGTTGTGGCCTTTTTCTGCAAATTTGCAAGGGATGTGATTGAGAAATTCAAGGGAAAGATACATCTGTATGAAACTGGATGGCTAAGTCAAATTGGAGACAATTTCATACAGATGCTTCCAAATTTTTGGGGGAGAATATTGTCAAGGTGGCATGGGCTTAATCTCTTTGATTTCCTATTTAAGCTTGACAATTTGAGAATTGAAGTTGAGCTGATTGACGTTGATGCAGAGTACTCATCAAGGAATGAGGTACTCAAACGTCTGTTCAAAAAAGACCAATTTGGTGAGAACCTCGATGGGCTAAACACTGAATACCTTAGGACCATTGGTCTTGAGGCTGAAATGGATAATGCATGGGGAAAAGGTTTCTCATCAAAGAAAGATAGCTCAATTCGTGCATGTGTCTCAAAATTTGGCATTGAGAGGGTCTCAAGTAAGGCTTTTCAGAGCAAGCTCGTCTCAAGATTCCATCTCAAAGTTGGAATTCTTGCCCTGCTACATGAGAGAAACAGGAATGAGAAGTTCTTACAAAAAGGGATGTCTGTTGATTTCAATTCCAAATCCCAAGAGAGAAGGGTTTTAATGATCAAGTTCAAGTCGGAGGATAGGGTTGACTCATATCCCGAACCCTTTTTCTTGAATTTGAGAAATTTTTCATCAAAAGAGTGTCCATTCGAGGATCTTAGATGGATGAAAGTGCATAATAAAATTTGGGGTGAAACTTTTTGCACTCCATTGATTCCAAATGAATTTCCATCAGAAAAAGATGAAGATATTGACGTCTGCAGCATTGTGGATGAGTCAGAATGTGATGACAGCAATCACGATGGGCAGTGTCTTGAAAACTCAGGGTCTTTTGGAATTAACAAGACCTCAGATGACCCAAACATTAATGTGGAAATAACTTCAATTGAGACCAGGCAGGGTGATGAAATCGATTGCCGGCTTAATTCAACTGAACCTAGTGAGGTGGAAACATCTGAATTCATGTCTGAGCTAGAGAATTCTGTGTATCTCAGCTTTCATGATGATGAAGTTTTCAATTATTCAAAGGTGCCAATAATAGGGGATGGCAATTGTTTCTTCAGAGCCATTTGTATGGCAGTGCATGGGAATGATCATGGTCACCTTGAAACTAGGAGGAAATTCTCTGAACATGCAAAGAGGATTGGATTCAAATTTAACGCTGAGATTGAGAAGGCAATTGTCGAGAGTGGAACTTTCTCTGACACATGGATGGTCAATCTCTTTGCAAATGTTATGAATGTTAGACTCTTCATTCATGAAACAGAGGATGGTCCTTACTATGAGATTCACCCAACAATCATCAAGTATGATGATCCCCCATTATTTTCAATTAGACTATTATTTGGGGATGCACACTTCACACTTTTGAGGGAAGTGGAAGGTGAATCATGTGAAAAACTTAAAGAAGAGTACATGATTGATTGGGGAGAGAACGAATTCAAGGTCCTCAATGAGTTTGTTGACTCAATAATGGACGAGCAGCATAGGTTCAAGGCTAACAATCTCAGGTCAAGAAAGGCTTTCTTCTTTTCTGAGCACGAGGGTATTGACTACGGGCATGATAAAGTTAAGTACCATCGGAATCAGATTGATTCAATTGACAGTCTTCTGCCCAGAGGAATGAATTGTGGTTTCAATTCAATGCTTGTGCAGGTGTACACTGATGGTGCTGAGCTACCAATGCATAAAGATGATGAGAAGGTCTACGACAATGACAACATTCTCTCTATCAATCTAAGGGGAAGCTGCAACTTCATAATTAATGAGTCAAAAAGAGGAGCTGACAATGCCAGATCAATTGAAATGAAGCCAGGGGCTTACATAGTGATGTTGAGTGGCTTCCAGAAAAAGTTCAAACATGGGGTTTCTGAATGTAGAAATGGGCGTGTGAATGTCACATTCAGAAGGCATGTGAGAAGTATGAGGGGTCATGACTTAATTGATTTTGATCTTTCCAAAATTAAAAATGGGTGTTTAATTAGGTCAATTGCAAATGCTGAATGCAGAGGACTGAATCAAGTTGTCCAGGCCTTGATTAGAAAGGACAGAACCTTCTGGAGTGATTGGATTCACTCAGGGCAGGGGGGAACAATAGATGATCTGGTTAAGGCCGCCACTGAGCTTCACTTCTCATTTGACTTAATCACTGAAAAAGGGTGTGAATCCTTCAAAAATTCTGGGCCAAAGTTCACATTCCAACTCAAAGATGGACATTTCGAAAGCATCAATGAAAGACCATCATGTGTGGAAATGACCTTCCTGAACATGAAATCAAAAGGAAGCAGCAAAGATAGGAGGAGCATTGGAAAGTTGAGGTTTGAACACATGAATGAAACCACTTTTGAGATCGTTGGAGAGTTTGCTGCAATCCTCAAAAGATCATTCATGGAGAGAACAACAGGTCTAATCCTCTCTGAATGTTATGGCTCAGCATGCAAGAACCTTGAAGACTTACAAATAGATCCAAACAGTCAATTTGAAAAAGAAATTGACTTCATATGTGGTTTTGCAGGATCCGGGAAAAGCTTTTCAATTCAATGCAAACTTGCATCGGAACCTAAAGCTGATTTCTTGGTTATATGTCCCAGGAATGAACTTAAAAAAGATTGGCTTGAAAAGGTCAATTGTAATGAGAAGAAAGTGAGGACATTTGAAGTGGCTCTGACACTAAATCTTTCAAAAATTGAACTGATCGTGATAGACGAGCTGGGCTTGTTTCCTAATGGATACCTCGATCTGCTGTGTCTAATGTTGATCAATCAAGGGAATTACTCCTGTCAGGTGATATGTTTGTTCGACCCCTTACAGGCAAGGTACCATAGCGATCTTGATGACTCCCTTCTGGATTTTCAACATGACTGTGATAGGTTGGTCACTGACTGTGAGTATCTGTACCTCGCAGAAAGCAGAAGATTGTCAAGCAAATTCTTTGGGGCCTTTTTCCCAGACATTCACCTACATAACGAGGGGAGGGAGGATTTTGGCATGACAATATATGACAGTGTTGTCGTGGCAGTGAATGAAATGAAGAAGAAGGAAACCCCGCTTGACTTGGTGCTGGTCGCTTCAAGGGATGAAAAAAAAGCATTGGCAACATCCGTTCGAACCTTGACATTTGGAGAAGCACAGGGGCTTACAGTGAACTACGCCTGCATTGTGCTCTCTGAATATTCAGAAAAGCAAGATGACTTACGATGGATGGTGGCGCTAACAAGGGCAAGGATCAAAATAATTTTTGTGTGCATGTATAGAGGTGGTTCAAGCTGCTTTCTACAAAACAATTCATCTAGGTTAATAGGTCTGTTCATGAGACAATCACCCATGACAATAAACAGGATGAAGCTGATGGTCAAGGGCGATTTGATACCTTTCAGAAAGACGATAGGTTGTTCGGACGAGGTGGATAGAGAAGAAAGGCTAGAAGGGGACCCCTTTCTCAAACCACTTATTTTCCTTGGAAGCAGGATCAACTCAGAGCAAGTTGAAGTGCTGGAGCCAGAAGTTGTTGAACCAATTGAAATGACGCATATTCCACTACCTCCAAGTCACTTTGATCAAAGCATCAATTTTGACAGAATCAGAGCTCGTGAGCACAGAGAATTCAAAATGAATTCAATGTGTACAAAACAGTTCTGTGAAGATTTTGAGCATTCAAAGGCCTCAGGAAAACAGATGACGTCAGGCCCTATGCGCTTCGAGGCAATTTACCCAAGACATAAAGCAGATGACGATCTCACCTTCTGGATGGCTGTTAAGAAGAGACTGCGTTTTTCTGAAGAGTTTGTTGAAAGGGCAAAACTCAAAGAGGCAATGGGGGTTGGAGGTCTGTTGTATTCCAATCTTAAAGAGACATTAAATTTGAAATTCAATTGGGATCAGAGCCTCCTTGACGAATGTGTCAATGACTTTGAAGAGAAGAAGCTTAGCAAAAGCAAGGCAACTCTACAAGCTCATAGCTCAAGATCTGACTCAGACTGGAAATTGGACCACATCTTTCTATTTATGAAATCTCAATTGTGTACAAAATATGAGAAGCAGTACGTAGACGCAAAAGCTGGACAGACATTGGCATGTTTTGCGCACTGCATTCTGGTTAAATTTGCACCCTACTGCAGATATATGGAAAAGCAATTGAGGAGTCAATTTCCGGATAACATATACATTCACTCAGGAAAGAACTTCAATGATCTTAATCAGTGGGTTAAAGAGAACATGAAGGGGAAGGAATGTATAGAGTCAGACTATGAAGCGTTCGATGCGAGTCAAGATGAATACATACTGGCCTTTGAGATATGCCTCATGGAGGATATGGGGATGCCAACTTGGTTCATCAATGATTATATAGACCTTAAATGCACACTCGGGTGCAAATTGGGCCATTTTGCCATTATGAGGTTCACTGGGGAGTTTAGCACCTTTCTATTCAACACACTGGCAAACATGGCCTTCACGTATGCCAGATATGATTGTGATGCATCAACTCCAATTGCCTTTGCTGGGGATGACATGTGCATGCTTGATAACTGTGCTGAAACTGACAAATTCGAAGGAATTTTTGAGAAAATATCACTGAAGGCGAAGGTTTTGAGGTCATGTACACCCATGTTTTGTGGGTGGAATTTATGTAAGCATGGGATCTTTAAGGAACCAGCTCTAGTTTACAACAGATTCATGGTGGCTCAGGAAAGAGGTAACGTGGAAGAATGCCTTGAGAACTACGCAATAGAGGTATCCTATGCTTACATGTTAGGTGAGAAGCTCTATGACTTTTTGAAAGAAGAAGAGAGGATTAACTACCATCAAAGTGTTGTGAGGTTCATAATCAAAAGAGCAGATAGACTTAAAACAAAGGTGCGACTTCTGTATACCAGTGATGGCAAAGGCAATTAGGGTCAAAAGTCTCACCAATCGATTGGAGGTTGACAAGTCTTTGCTCAACTCCAATGAGGTCTCAGCTTTGTACGGCGGCGCTTTCGCACCACTAGTATTCAAAGATGAAGTCAAAATGGTGATTCCTGGCAATCTATTAGGTGGGCCAATTCGTTTGCAAGCAAATATACTCACCAAATCGAGACTTGAGAAAATTCGCAGTCAGAAGTTCAAAGGGAATTCCTGTGCCTACCTGCATCTTGGGGTGGTTACTATTGTCATACAATCACTATTGGTGTCCGGAAATGAAAATGTCAAAGGCAGATGCTCACTGGTTGACCTCTCAAGAGGCTCCGAGATAACTGGGCTTATTGACAAATTCAAGTTTAGTTTTACCAAGAGTGAACCATTCGCAGCAAAGATGTTAACAATAAATGCAGCAATTGATATTGATTGCGAGGTATCTGCTGGGAGTATTCAAGCCCTTCTTGAGGTCGAGGGCATTGATGTAAGATCTGAAAGAAGTGTCTTAGCCATCACCACCGGCATAACCTGTATTCCAACCAACTCCATGGTGATGCTACCAGGCTTAAAGAGGGAAACCCCAAAATTTGCAATCGCAAATGTTTACAATGTTCCTGATGAAGACCCGATTGAATGCGAGGCATTCAATAGGCTGTTCGGAGCTGCCAATCCAAAATTGATCGACCTAGGTAGTGAAACTGTATTGGAAGAAGGGAAAAGGTTTGGTCTATGGGGCCCTGTTGTGAAACCAGTGCACAGGAGGAAGCTTGTAACAAAAGGCATCATTAAGGATCATATGAGCCAGATTATGTCAGGCCCTTCCAAAGTTTTGAAAATAGAAGAAGGCTTGAAGAGATCAAACTCATTACGTGTTGAAGATGTCTGCAAAACTAGCGAAGAAGAGGCTGATACACGACGAAGTTTCGGAATGGATTTTCAGGAGCTTCGTGGATCCGGAGAATTCAATGGGGGTTTGGTTGGTGAATGCTGGGAACCAAAGAGTTCAGCTGAATTTAAACCAACAGGAGCAAAAATCAAGAGTTCAAAACAGTCGACTCCGGACGATTTTTGGCAACATAGCAGATCACTCAGCAGGGCCAGCAACAGTGTACCCGTCAATCAGTGTAAGTTATCAAGTGATGAACATTCAGGGAATCGAGGGTGTTGCACAGATGGATGGAAATTTCAATCTGAGAACATTGGTGGAAAATCTGAAGACCTTCCTTCTGACCAGCCAGGATCCTCAGCTCAACACTGCAACATTAAGGGAGGTTTGCCGGAGCTTTGCAAACTACGCCCTTGAGTACTACATGGAAGACCCCGATAGAATGTCGAATCTAGCTGACAAAATGCCACAACTAGCTCTGCAGGCGAGGGAGGTTATGTTTGACTTTTCTGATGGAATAAGTCAGCAATATTTGAGGGGTTTTCCAATGAGGGCTAAGGTGATACAGGAATTGAATAGCAGGCTTCTGCAGTCCACTGGCACCAAGGCTGTGTTTGAAGCAAAGGGGACTATTGAGTCCTCAGTTAATTTGATAGTTTAGAAACTATCTAGGCTTTGTATGTTGAGTGCTAAAAGTTCAACATATACCTCATAAGTCAGATTTATCTGCTCAGGTAAGTTTCAACCTCTTTGTATTTAAAGAGTGGCCGAATGAGTGCATGCTCATGTTCGGAGACCAGCTTCCCAGCTTTATCAAATATTATGACTTAAGTATTAATAGGGATGTCTTTTATGAATATTTATG"
                                                        }
                                                    ],
                                                    "source_name": "16SP042_A",
                                                    "source_type": "internal"
                                                }
                                            ],
                                            "issues": null,
                                            "last_indexed_version": 0,
                                            "lower_name": "betaflexivirus from camelia #1",
                                            "name": "Betaflexivirus from Camelia #1",
                                            "reference": {
                                                "id": "pat6xdn3"
                                            },
                                            "remote": {
                                                "id": "5ce8b98a"
                                            },
                                            "schema": [],
                                            "user": {
                                                "id": "igboyes"
                                            },
                                            "verified": true,
                                            "version": 0
                                        },
                                        "id": "1wfc5x6e.removed",
                                        "index": {
                                            "id": "s7frhn8n",
                                            "version": 1
                                        },
                                        "method_name": "remove",
                                        "otu": {
                                            "id": "1wfc5x6e",
                                            "name": "Betaflexivirus from Camelia #1",
                                            "version": "removed"
                                        },
                                        "reference": {
                                            "id": "pat6xdn3"
                                        },
                                        "user": {
                                            "administrator": true,
                                            "handle": "igboyes",
                                            "id": "igboyes"
                                        }
                                    },
                                    "properties": {
                                        "created_at": {
                                            "format": "date-time",
                                            "title": "Created At",
                                            "type": "string"
                                        },
                                        "description": {
                                            "title": "Description",
                                            "type": "string"
                                        },
                                        "diff": {
                                            "title": "Diff",
                                            "type": "object"
                                        },
                                        "id": {
                                            "title": "Id",
                                            "type": "string"
                                        },
                                        "index": {
                                            "$ref": "#/components/schemas/HistoryIndex"
                                        },
                                        "method_name": {
                                            "$ref": "#/components/schemas/HistoryMethod"
                                        },
                                        "otu": {
                                            "$ref": "#/components/schemas/HistoryOTU"
                                        },
                                        "reference": {
                                            "$ref": "#/components/schemas/ReferenceNested"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserMinimal"
                                        }
                                    },
                                    "required": [
                                        "created_at",
                                        "description",
                                        "id",
                                        "index",
                                        "method_name",
                                        "otu",
                                        "reference",
                                        "user",
                                        "diff"
                                    ],
                                    "title": "HistoryResponse",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Operation"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    }
                },
                "summary": "Get a specific change document by its ``change_id``"
            }
        },
        "/hmms": {
            "delete": {
                "description": "This won't break analyses that reference the installed HMM data.",
                "responses": {
                    "204": {
                        "content": {},
                        "description": "Successful operation"
                    },
                    "403": {
                        "content": {},
                        "description": "Not permitted"
                    }
                },
                "summary": "Delete all installed HMM data"
            },
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "documents": {
                                            "items": {
                                                "$ref": "#/components/schemas/HMMMinimal"
                                            },
                                            "title": "Documents",
                                            "type": "array"
                                        },
                                        "found_count": {
                                            "title": "Found Count",
                                            "type": "integer"
                                        },
                                        "page": {
                                            "title": "Page",
                                            "type": "integer"
                                        },
                                        "page_count": {
                                            "title": "Page Count",
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "title": "Per Page",
                                            "type": "integer"
                                        },
                                        "status": {
                                            "title": "Status",
                                            "type": "object"
                                        },
                                        "total_count": {
                                            "title": "Total Count",
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "found_count",
                                        "page",
                                        "page_count",
                                        "per_page",
                                        "total_count",
                                        "documents",
                                        "status"
                                    ],
                                    "title": "HMMSearchResult",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Find HMM annotation documents"
            }
        },
        "/hmms/status": {
            "get": {
                "description": "- `errors`: lists any errors in the HMM data\n- `id`: is always 'hmm'\n- `installed`: a dict describing the installed HMM data\n- `process.id`: the ID of the process installing the HMM data\n- `release`: a dict describing the latest available release\n\nInstalled HMM data cannot currently be updated.",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Get the status of the HMM data. Contains the following fields:"
            }
        },
        "/hmms/status/release": {
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful operation"
                    },
                    "502": {
                        "content": {},
                        "description": "count not reach Github"
                    }
                },
                "summary": "Get the latest release for the HMM data"
            }
        },
        "/hmms/status/updates": {
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "List all updates applied to the HMM collection"
            },
            "post": {
                "description": "",
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "content": {},
                        "description": "Target release does not exist"
                    },
                    "403": {
                        "content": {},
                        "description": "Not permitted"
                    }
                },
                "summary": "Install the latest official HMM database from GitHub"
            }
        },
        "/hmms/{hmm_id}": {
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "cluster": {
                                            "title": "Cluster",
                                            "type": "integer"
                                        },
                                        "count": {
                                            "title": "Count",
                                            "type": "integer"
                                        },
                                        "entries": {
                                            "items": {
                                                "$ref": "#/components/schemas/HMMSequenceEntry"
                                            },
                                            "title": "Entries",
                                            "type": "array"
                                        },
                                        "families": {
                                            "additionalProperties": {
                                                "type": "integer"
                                            },
                                            "title": "Families",
                                            "type": "object"
                                        },
                                        "genera": {
                                            "additionalProperties": {
                                                "type": "integer"
                                            },
                                            "title": "Genera",
                                            "type": "object"
                                        },
                                        "hidden": {
                                            "title": "Hidden",
                                            "type": "boolean"
                                        },
                                        "id": {
                                            "title": "Id",
                                            "type": "string"
                                        },
                                        "length": {
                                            "title": "Length",
                                            "type": "integer"
                                        },
                                        "mean_entropy": {
                                            "title": "Mean Entropy",
                                            "type": "number"
                                        },
                                        "name": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "title": "Name",
                                            "type": "array"
                                        },
                                        "total_entropy": {
                                            "title": "Total Entropy",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "cluster",
                                        "count",
                                        "families",
                                        "name",
                                        "entries",
                                        "genera",
                                        "hidden",
                                        "length",
                                        "mean_entropy",
                                        "total_entropy"
                                    ],
                                    "title": "HMM",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    }
                },
                "summary": "Get a complete individual HMM annotation document"
            }
        },
        "/jobs": {
            "delete": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {},
                        "description": "Successful Operation"
                    }
                },
                "summary": "Clear completed, failed or all finished jobs"
            },
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {},
                        "description": "Successful operation"
                    },
                    "400": {
                        "content": {},
                        "description": "Invalid query"
                    }
                },
                "summary": "List all job documents"
            }
        },
        "/jobs/{job_id}": {
            "delete": {
                "description": "",
                "responses": {
                    "204": {
                        "content": {},
                        "description": "Successful operation"
                    },
                    "403": {
                        "content": {},
                        "description": "Not permitted"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    },
                    "409": {
                        "content": {},
                        "description": "Job is running or waiting and cannot be removed"
                    }
                },
                "summary": "Remove a job"
            },
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {},
                        "description": "Successful operation"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    }
                },
                "summary": "Return the complete document for a given job"
            }
        },
        "/jobs/{job_id}/cancel": {
            "put": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {},
                        "description": "Successful operation"
                    },
                    "403": {
                        "content": {},
                        "description": "Not permitted"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    },
                    "409": {
                        "content": {},
                        "description": "Not cancellable"
                    }
                },
                "summary": "Cancel a job"
            }
        },
        "/labels": {
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "example": [
                                            {
                                                "color": "#6B7280",
                                                "count": 0,
                                                "description": "dsRNA/Ab",
                                                "id": 22,
                                                "name": "Ab"
                                            }
                                        ],
                                        "properties": {
                                            "color": {
                                                "title": "Color",
                                                "type": "string"
                                            },
                                            "count": {
                                                "title": "Count",
                                                "type": "integer"
                                            },
                                            "description": {
                                                "title": "Description",
                                                "type": "string"
                                            },
                                            "id": {
                                                "title": "Id",
                                                "type": "integer"
                                            },
                                            "name": {
                                                "title": "Name",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "color",
                                            "description",
                                            "id",
                                            "name",
                                            "count"
                                        ],
                                        "title": "GetLabelResponse",
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "content": {},
                        "description": "Invalid query"
                    }
                },
                "summary": "List all sample labels"
            },
            "post": {
                "description": "The color must be a valid hexadecimal code.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Label fields for creating a new label.",
                                "example": {
                                    "color": "#374151",
                                    "description": "dsRNA/binding protein",
                                    "name": "Binding protein"
                                },
                                "properties": {
                                    "color": {
                                        "default": "#A0AEC0",
                                        "description": "color of the label",
                                        "title": "Color",
                                        "type": "string"
                                    },
                                    "description": {
                                        "default": "",
                                        "description": "description of the document",
                                        "title": "Description",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "unique name for the label document",
                                        "minLength": 1,
                                        "title": "Name",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name"
                                ],
                                "title": "CreateLabelSchema",
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "color": "#374151",
                                        "count": 0,
                                        "description": "dsRNA/binding protein",
                                        "id": 23,
                                        "name": "Binding protein"
                                    },
                                    "properties": {
                                        "color": {
                                            "title": "Color",
                                            "type": "string"
                                        },
                                        "count": {
                                            "title": "Count",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "title": "Description",
                                            "type": "string"
                                        },
                                        "id": {
                                            "title": "Id",
                                            "type": "integer"
                                        },
                                        "name": {
                                            "title": "Name",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "color",
                                        "description",
                                        "id",
                                        "name",
                                        "count"
                                    ],
                                    "title": "CreateLabelResponse",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "content": {},
                        "description": "Invalid Input"
                    }
                },
                "summary": "Create a sample label"
            }
        },
        "/labels/{label_id}": {
            "delete": {
                "description": "",
                "responses": {
                    "204": {
                        "content": {},
                        "description": "Successful operation"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    }
                },
                "summary": "Delete a sample label"
            },
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "color": "#6B7280",
                                        "count": 0,
                                        "description": "dsRNA/Ab",
                                        "id": 22,
                                        "name": "Ab"
                                    },
                                    "properties": {
                                        "color": {
                                            "title": "Color",
                                            "type": "string"
                                        },
                                        "count": {
                                            "title": "Count",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "title": "Description",
                                            "type": "string"
                                        },
                                        "id": {
                                            "title": "Id",
                                            "type": "integer"
                                        },
                                        "name": {
                                            "title": "Name",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "color",
                                        "description",
                                        "id",
                                        "name",
                                        "count"
                                    ],
                                    "title": "LabelResponse",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    }
                },
                "summary": "Get the details for a sample label"
            },
            "patch": {
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Label fields for editing an existing label.",
                                "example": {
                                    "color": "#93C5FD",
                                    "description": "Blueberry",
                                    "name": "Blueberry"
                                },
                                "properties": {
                                    "color": {
                                        "title": "Color",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "description of the existing label document",
                                        "title": "Description",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "name of the existing label document",
                                        "title": "Name",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name",
                                    "color",
                                    "description"
                                ],
                                "title": "EditLabelSchema",
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "color": "#93C5FD",
                                        "count": 0,
                                        "description": "Blueberry",
                                        "id": 22,
                                        "name": "Blueberry"
                                    },
                                    "properties": {
                                        "color": {
                                            "title": "Color",
                                            "type": "string"
                                        },
                                        "count": {
                                            "title": "Count",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "title": "Description",
                                            "type": "string"
                                        },
                                        "id": {
                                            "title": "Id",
                                            "type": "integer"
                                        },
                                        "name": {
                                            "title": "Name",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "color",
                                        "description",
                                        "id",
                                        "name",
                                        "count"
                                    ],
                                    "title": "LabelResponse",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "content": {},
                        "description": "Invalid input"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    }
                },
                "summary": "Edit an existing sample label"
            }
        },
        "/settings": {
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "default_source_types": [
                                            "isolate",
                                            "strain"
                                        ],
                                        "enable_api": true,
                                        "enable_sentry": true,
                                        "hmm_slug": "virtool/virtool-hmm",
                                        "minimum_passsword_length": 8,
                                        "sample_all_read": false,
                                        "sample_all_write": true,
                                        "sample_group": "force_choice",
                                        "sample_group_read": true,
                                        "sample_group_write": true,
                                        "sample_unique_names": false
                                    },
                                    "properties": {
                                        "default_source_types": {
                                            "default": [
                                                "isolate",
                                                "strain"
                                            ],
                                            "items": {},
                                            "title": "Default Source Types",
                                            "type": "array"
                                        },
                                        "enable_api": {
                                            "default": false,
                                            "title": "Enable Api",
                                            "type": "boolean"
                                        },
                                        "enable_sentry": {
                                            "default": true,
                                            "title": "Enable Sentry",
                                            "type": "boolean"
                                        },
                                        "hmm_slug": {
                                            "default": "virtool/virtool-hmm",
                                            "title": "Hmm Slug",
                                            "type": "string"
                                        },
                                        "minimum_password_length": {
                                            "default": 8,
                                            "title": "Minimum Password Length",
                                            "type": "integer"
                                        },
                                        "sample_all_read": {
                                            "default": true,
                                            "title": "Sample All Read",
                                            "type": "boolean"
                                        },
                                        "sample_all_write": {
                                            "default": false,
                                            "title": "Sample All Write",
                                            "type": "boolean"
                                        },
                                        "sample_group": {
                                            "title": "Sample Group",
                                            "type": "string"
                                        },
                                        "sample_group_read": {
                                            "default": true,
                                            "title": "Sample Group Read",
                                            "type": "boolean"
                                        },
                                        "sample_group_write": {
                                            "default": false,
                                            "title": "Sample Group Write",
                                            "type": "boolean"
                                        },
                                        "sample_unique_names": {
                                            "default": true,
                                            "title": "Sample Unique Names",
                                            "type": "boolean"
                                        }
                                    },
                                    "title": "GetSettingsResponse",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Get a complete document of the application settings"
            },
            "patch": {
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "default_source_types": {
                                        "items": {},
                                        "title": "Default Source Types",
                                        "type": "array"
                                    },
                                    "enable_api": {
                                        "default": false,
                                        "title": "Enable Api",
                                        "type": "boolean"
                                    },
                                    "enable_sentry": {
                                        "default": true,
                                        "title": "Enable Sentry",
                                        "type": "boolean"
                                    },
                                    "hmm_slug": {
                                        "default": "virtool/virtool-hmm",
                                        "title": "Hmm Slug",
                                        "type": "string"
                                    },
                                    "minimum_password_length": {
                                        "default": 8,
                                        "title": "Minimum Password Length",
                                        "type": "integer"
                                    },
                                    "sample_all_read": {
                                        "default": true,
                                        "title": "Sample All Read",
                                        "type": "boolean"
                                    },
                                    "sample_all_write": {
                                        "default": false,
                                        "title": "Sample All Write",
                                        "type": "boolean"
                                    },
                                    "sample_group": {
                                        "default": "none",
                                        "title": "Sample Group",
                                        "type": "string"
                                    },
                                    "sample_group_read": {
                                        "default": true,
                                        "title": "Sample Group Read",
                                        "type": "boolean"
                                    },
                                    "sample_group_write": {
                                        "default": false,
                                        "title": "Sample Group Write",
                                        "type": "boolean"
                                    },
                                    "sample_unique_names": {
                                        "default": true,
                                        "title": "Sample Unique Names",
                                        "type": "boolean"
                                    }
                                },
                                "title": "UpdateSettingsSchema",
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "default_source_types": [
                                            "strain"
                                        ],
                                        "enable_api": true,
                                        "enable_sentry": true,
                                        "hmm_slug": "virtool/virtool-hmm",
                                        "minimum_passsword_length": 12,
                                        "sample_all_read": false,
                                        "sample_unique_names": false
                                    },
                                    "properties": {
                                        "default_source_types": {
                                            "default": [
                                                "isolate",
                                                "strain"
                                            ],
                                            "items": {},
                                            "title": "Default Source Types",
                                            "type": "array"
                                        },
                                        "enable_api": {
                                            "default": false,
                                            "title": "Enable Api",
                                            "type": "boolean"
                                        },
                                        "enable_sentry": {
                                            "default": true,
                                            "title": "Enable Sentry",
                                            "type": "boolean"
                                        },
                                        "hmm_slug": {
                                            "default": "virtool/virtool-hmm",
                                            "title": "Hmm Slug",
                                            "type": "string"
                                        },
                                        "minimum_password_length": {
                                            "default": 8,
                                            "title": "Minimum Password Length",
                                            "type": "integer"
                                        },
                                        "sample_all_read": {
                                            "default": true,
                                            "title": "Sample All Read",
                                            "type": "boolean"
                                        },
                                        "sample_all_write": {
                                            "default": false,
                                            "title": "Sample All Write",
                                            "type": "boolean"
                                        },
                                        "sample_group": {
                                            "title": "Sample Group",
                                            "type": "string"
                                        },
                                        "sample_group_read": {
                                            "default": true,
                                            "title": "Sample Group Read",
                                            "type": "boolean"
                                        },
                                        "sample_group_write": {
                                            "default": false,
                                            "title": "Sample Group Write",
                                            "type": "boolean"
                                        },
                                        "sample_unique_names": {
                                            "default": true,
                                            "title": "Sample Unique Names",
                                            "type": "boolean"
                                        }
                                    },
                                    "title": "UpdateSettingsResponse",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "403": {
                        "content": {},
                        "description": "Not permitted"
                    }
                },
                "summary": "Update application settings based on request data"
            }
        },
        "/subtractions": {
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "description": "Minimal Subtraction model used for WebSocked messages and resource listings.",
                                        "example": [
                                            {
                                                "count": 9,
                                                "created_at": "2021-12-21T23:52:13.185000Z",
                                                "file": {
                                                    "id": 58,
                                                    "name": "arabidopsis_thaliana_+_plastids.fa.gz"
                                                },
                                                "has_file": true,
                                                "id": "q0ek30si",
                                                "name": "Arabidopsis thaliana",
                                                "nickname": "",
                                                "ready": true,
                                                "user": {
                                                    "administrator": true,
                                                    "handle": "igboyes",
                                                    "id": "igboyes"
                                                }
                                            }
                                        ],
                                        "properties": {
                                            "count": {
                                                "title": "Count",
                                                "type": "integer"
                                            },
                                            "created_at": {
                                                "format": "date-time",
                                                "title": "Created At",
                                                "type": "string"
                                            },
                                            "file": {
                                                "anyOf": [
                                                    {
                                                        "$ref": "#/components/schemas/UploadMinimal"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/SubtractionUpload"
                                                    }
                                                ],
                                                "title": "File"
                                            },
                                            "has_file": {
                                                "title": "Has File",
                                                "type": "boolean"
                                            },
                                            "id": {
                                                "title": "Id",
                                                "type": "string"
                                            },
                                            "name": {
                                                "title": "Name",
                                                "type": "string"
                                            },
                                            "nickname": {
                                                "default": "",
                                                "title": "Nickname",
                                                "type": "string"
                                            },
                                            "ready": {
                                                "title": "Ready",
                                                "type": "boolean"
                                            },
                                            "user": {
                                                "$ref": "#/components/schemas/UserMinimal"
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "name",
                                            "created_at",
                                            "file",
                                            "has_file",
                                            "ready",
                                            "user"
                                        ],
                                        "title": "GetSubtractionResponse",
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Find subtractions by id (name) or nickname"
            },
            "post": {
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Used for creating a new Subtraction.",
                                "example": {
                                    "name": "Foobar",
                                    "nickname": "foo",
                                    "upload_id": 1234
                                },
                                "properties": {
                                    "name": {
                                        "description": "A unique name for the host (eg. Arabidopsis)",
                                        "minLength": 1,
                                        "title": "Name",
                                        "type": "string"
                                    },
                                    "nickname": {
                                        "default": "",
                                        "description": "A nickname of the host",
                                        "title": "Nickname",
                                        "type": "string"
                                    },
                                    "upload_id": {
                                        "description": "The unique id of the file",
                                        "title": "Upload Id",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "name",
                                    "upload_id"
                                ],
                                "title": "CreateSubtractionSchema",
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Complete Subtraction model.",
                                    "example": {
                                        "created_at": "2015-10-06T20:00:00Z",
                                        "deleted": false,
                                        "file": {
                                            "id": 1234,
                                            "name": "test_upload"
                                        },
                                        "files": [],
                                        "has_file": true,
                                        "id": "abc123",
                                        "linked_samples": [],
                                        "name": "Foobar",
                                        "nickname": "foo",
                                        "ready": false,
                                        "user": {
                                            "administrator": false,
                                            "handle": "bob",
                                            "id": "test"
                                        }
                                    },
                                    "properties": {
                                        "count": {
                                            "title": "Count",
                                            "type": "integer"
                                        },
                                        "created_at": {
                                            "format": "date-time",
                                            "title": "Created At",
                                            "type": "string"
                                        },
                                        "deleted": {
                                            "title": "Deleted",
                                            "type": "boolean"
                                        },
                                        "file": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/UploadMinimal"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SubtractionUpload"
                                                }
                                            ],
                                            "title": "File"
                                        },
                                        "files": {
                                            "items": {
                                                "$ref": "#/components/schemas/SubtractionFile"
                                            },
                                            "title": "Files",
                                            "type": "array"
                                        },
                                        "gc": {
                                            "$ref": "#/components/schemas/NucleotideComposition"
                                        },
                                        "has_file": {
                                            "title": "Has File",
                                            "type": "boolean"
                                        },
                                        "id": {
                                            "title": "Id",
                                            "type": "string"
                                        },
                                        "linked_samples": {
                                            "items": {
                                                "$ref": "#/components/schemas/SubtractionLinkedSample"
                                            },
                                            "title": "Linked Samples",
                                            "type": "array"
                                        },
                                        "name": {
                                            "title": "Name",
                                            "type": "string"
                                        },
                                        "nickname": {
                                            "default": "",
                                            "title": "Nickname",
                                            "type": "string"
                                        },
                                        "ready": {
                                            "title": "Ready",
                                            "type": "boolean"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserMinimal"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "name",
                                        "created_at",
                                        "file",
                                        "has_file",
                                        "ready",
                                        "user",
                                        "deleted",
                                        "files",
                                        "linked_samples"
                                    ],
                                    "title": "CreateSubtractionResponse",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "content": {},
                        "description": "Bad request"
                    },
                    "403": {
                        "content": {},
                        "description": "Not permitted"
                    }
                },
                "summary": "Add a new subtraction. Starts a 'CreateSubtraction' job process"
            }
        },
        "/subtractions/{subtraction_id}": {
            "delete": {
                "description": "",
                "responses": {
                    "204": {
                        "content": {},
                        "description": "No content"
                    },
                    "403": {
                        "content": {},
                        "description": "Not permitted"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    },
                    "409": {
                        "content": {},
                        "description": "Has linked samples"
                    }
                },
                "summary": "Remove an existing subtraction"
            },
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Complete Subtraction model.",
                                    "example": {
                                        "count": 9,
                                        "created_at": "2021-12-21T23:52:13.185000Z",
                                        "deleted": false,
                                        "file": {
                                            "id": 58,
                                            "name": "arabidopsis_thaliana_+_plastids.fa.gz"
                                        },
                                        "files": [
                                            {
                                                "download_url": "/subtractions/q0ek30si/files/subtraction.1.bt2",
                                                "id": 39,
                                                "name": "subtraction.1.bt2",
                                                "size": 44200803,
                                                "subtraction": "q0ek30si",
                                                "type": "bowtie2"
                                            },
                                            {
                                                "download_url": "/subtractions/q0ek30si/files/subtraction.2.bt2",
                                                "id": 37,
                                                "name": "subtraction.2.bt2",
                                                "size": 30000964,
                                                "subtraction": "q0ek30si",
                                                "type": "bowtie2"
                                            },
                                            {
                                                "download_url": "/subtractions/q0ek30si/files/subtraction.3.bt2",
                                                "id": 42,
                                                "name": "subtraction.3.bt2",
                                                "size": 3275,
                                                "subtraction": "q0ek30si",
                                                "type": "bowtie2"
                                            },
                                            {
                                                "download_url": "/subtractions/q0ek30si/files/subtraction.4.bt2",
                                                "id": 40,
                                                "name": "subtraction.4.bt2",
                                                "size": 30000958,
                                                "subtraction": "q0ek30si",
                                                "type": "bowtie2"
                                            },
                                            {
                                                "download_url": "/subtractions/q0ek30si/files/subtraction.fa.gz",
                                                "id": 36,
                                                "name": "subtraction.fa.gz",
                                                "size": 36160657,
                                                "subtraction": "q0ek30si",
                                                "type": "fasta"
                                            },
                                            {
                                                "download_url": "/subtractions/q0ek30si/files/subtraction.rev.1.bt2",
                                                "id": 41,
                                                "name": "subtraction.rev.1.bt2",
                                                "size": 44200803,
                                                "subtraction": "q0ek30si",
                                                "type": "bowtie2"
                                            },
                                            {
                                                "download_url": "/subtractions/q0ek30si/files/subtraction.rev.2.bt2",
                                                "id": 38,
                                                "name": "subtraction.rev.2.bt2",
                                                "size": 30000964,
                                                "subtraction": "q0ek30si",
                                                "type": "bowtie2"
                                            }
                                        ],
                                        "gc": {
                                            "a": 0.319,
                                            "c": 0.18,
                                            "g": 0.18,
                                            "n": 0.002,
                                            "t": 0.319
                                        },
                                        "has_file": true,
                                        "id": "q0ek30si",
                                        "linked_samples": [
                                            {
                                                "id": "2izth91q",
                                                "name": "21BP074"
                                            },
                                            {
                                                "id": "noni4fpk",
                                                "name": "21BP075"
                                            },
                                            {
                                                "id": "o3ldvwpm",
                                                "name": "22SP001-M"
                                            },
                                            {
                                                "id": "gobtw98t",
                                                "name": "22SP001-R"
                                            }
                                        ],
                                        "name": "Arabidopsis thaliana",
                                        "nickname": "",
                                        "ready": true,
                                        "user": {
                                            "administrator": true,
                                            "handle": "igboyes",
                                            "id": "igboyes"
                                        }
                                    },
                                    "properties": {
                                        "count": {
                                            "title": "Count",
                                            "type": "integer"
                                        },
                                        "created_at": {
                                            "format": "date-time",
                                            "title": "Created At",
                                            "type": "string"
                                        },
                                        "deleted": {
                                            "title": "Deleted",
                                            "type": "boolean"
                                        },
                                        "file": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/UploadMinimal"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SubtractionUpload"
                                                }
                                            ],
                                            "title": "File"
                                        },
                                        "files": {
                                            "items": {
                                                "$ref": "#/components/schemas/SubtractionFile"
                                            },
                                            "title": "Files",
                                            "type": "array"
                                        },
                                        "gc": {
                                            "$ref": "#/components/schemas/NucleotideComposition"
                                        },
                                        "has_file": {
                                            "title": "Has File",
                                            "type": "boolean"
                                        },
                                        "id": {
                                            "title": "Id",
                                            "type": "string"
                                        },
                                        "linked_samples": {
                                            "items": {
                                                "$ref": "#/components/schemas/SubtractionLinkedSample"
                                            },
                                            "title": "Linked Samples",
                                            "type": "array"
                                        },
                                        "name": {
                                            "title": "Name",
                                            "type": "string"
                                        },
                                        "nickname": {
                                            "default": "",
                                            "title": "Nickname",
                                            "type": "string"
                                        },
                                        "ready": {
                                            "title": "Ready",
                                            "type": "boolean"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserMinimal"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "name",
                                        "created_at",
                                        "file",
                                        "has_file",
                                        "ready",
                                        "user",
                                        "deleted",
                                        "files",
                                        "linked_samples"
                                    ],
                                    "title": "SubtractionResponse",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Operation Successful"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    }
                },
                "summary": "Get a complete host document"
            },
            "patch": {
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Used when modifying a Subtraction",
                                "example": {
                                    "name": "Arabidopsis",
                                    "nickname": "Thale cress"
                                },
                                "properties": {
                                    "name": {
                                        "description": "A unique name for the host (eg. Arabidopsis)",
                                        "minLength": 1,
                                        "title": "Name",
                                        "type": "string"
                                    },
                                    "nickname": {
                                        "description": "A nickname of the host",
                                        "title": "Nickname",
                                        "type": "string"
                                    }
                                },
                                "title": "EditSubtractionSchema",
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Complete Subtraction model.",
                                    "example": {
                                        "count": 9,
                                        "created_at": "2021-12-21T23:52:13.185000Z",
                                        "deleted": false,
                                        "file": {
                                            "id": 58,
                                            "name": "arabidopsis_thaliana_+_plastids.fa.gz"
                                        },
                                        "files": [
                                            {
                                                "download_url": "/subtractions/q0ek30si/files/subtraction.1.bt2",
                                                "id": 39,
                                                "name": "subtraction.1.bt2",
                                                "size": 44200803,
                                                "subtraction": "q0ek30si",
                                                "type": "bowtie2"
                                            },
                                            {
                                                "download_url": "/subtractions/q0ek30si/files/subtraction.2.bt2",
                                                "id": 37,
                                                "name": "subtraction.2.bt2",
                                                "size": 30000964,
                                                "subtraction": "q0ek30si",
                                                "type": "bowtie2"
                                            },
                                            {
                                                "download_url": "/subtractions/q0ek30si/files/subtraction.3.bt2",
                                                "id": 42,
                                                "name": "subtraction.3.bt2",
                                                "size": 3275,
                                                "subtraction": "q0ek30si",
                                                "type": "bowtie2"
                                            },
                                            {
                                                "download_url": "/subtractions/q0ek30si/files/subtraction.4.bt2",
                                                "id": 40,
                                                "name": "subtraction.4.bt2",
                                                "size": 30000958,
                                                "subtraction": "q0ek30si",
                                                "type": "bowtie2"
                                            },
                                            {
                                                "download_url": "/subtractions/q0ek30si/files/subtraction.fa.gz",
                                                "id": 36,
                                                "name": "subtraction.fa.gz",
                                                "size": 36160657,
                                                "subtraction": "q0ek30si",
                                                "type": "fasta"
                                            },
                                            {
                                                "download_url": "/subtractions/q0ek30si/files/subtraction.rev.1.bt2",
                                                "id": 41,
                                                "name": "subtraction.rev.1.bt2",
                                                "size": 44200803,
                                                "subtraction": "q0ek30si",
                                                "type": "bowtie2"
                                            },
                                            {
                                                "download_url": "/subtractions/q0ek30si/files/subtraction.rev.2.bt2",
                                                "id": 38,
                                                "name": "subtraction.rev.2.bt2",
                                                "size": 30000964,
                                                "subtraction": "q0ek30si",
                                                "type": "bowtie2"
                                            }
                                        ],
                                        "gc": {
                                            "a": 0.319,
                                            "c": 0.18,
                                            "g": 0.18,
                                            "n": 0.002,
                                            "t": 0.319
                                        },
                                        "has_file": true,
                                        "id": "q0ek30si",
                                        "linked_samples": [
                                            {
                                                "id": "2izth91q",
                                                "name": "21BP074"
                                            },
                                            {
                                                "id": "noni4fpk",
                                                "name": "21BP075"
                                            },
                                            {
                                                "id": "o3ldvwpm",
                                                "name": "22SP001-M"
                                            },
                                            {
                                                "id": "gobtw98t",
                                                "name": "22SP001-R"
                                            }
                                        ],
                                        "name": "Arabidopsis",
                                        "nickname": "Thale cress",
                                        "ready": true,
                                        "user": {
                                            "administrator": true,
                                            "handle": "igboyes",
                                            "id": "igboyes"
                                        }
                                    },
                                    "properties": {
                                        "count": {
                                            "title": "Count",
                                            "type": "integer"
                                        },
                                        "created_at": {
                                            "format": "date-time",
                                            "title": "Created At",
                                            "type": "string"
                                        },
                                        "deleted": {
                                            "title": "Deleted",
                                            "type": "boolean"
                                        },
                                        "file": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/UploadMinimal"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/SubtractionUpload"
                                                }
                                            ],
                                            "title": "File"
                                        },
                                        "files": {
                                            "items": {
                                                "$ref": "#/components/schemas/SubtractionFile"
                                            },
                                            "title": "Files",
                                            "type": "array"
                                        },
                                        "gc": {
                                            "$ref": "#/components/schemas/NucleotideComposition"
                                        },
                                        "has_file": {
                                            "title": "Has File",
                                            "type": "boolean"
                                        },
                                        "id": {
                                            "title": "Id",
                                            "type": "string"
                                        },
                                        "linked_samples": {
                                            "items": {
                                                "$ref": "#/components/schemas/SubtractionLinkedSample"
                                            },
                                            "title": "Linked Samples",
                                            "type": "array"
                                        },
                                        "name": {
                                            "title": "Name",
                                            "type": "string"
                                        },
                                        "nickname": {
                                            "default": "",
                                            "title": "Nickname",
                                            "type": "string"
                                        },
                                        "ready": {
                                            "title": "Ready",
                                            "type": "boolean"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserMinimal"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "name",
                                        "created_at",
                                        "file",
                                        "has_file",
                                        "ready",
                                        "user",
                                        "deleted",
                                        "files",
                                        "linked_samples"
                                    ],
                                    "title": "SubtractionResponse",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Operation successful"
                    },
                    "400": {
                        "content": {},
                        "description": "Invalid input"
                    },
                    "403": {
                        "content": {},
                        "description": "Not permitted"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    }
                },
                "summary": "Updates the nickname for an existing subtraction"
            }
        },
        "/subtractions/{subtraction_id}/files/{filename}": {
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {},
                        "description": "Operation successful"
                    },
                    "400": {
                        "content": {},
                        "description": "Bad request"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    }
                },
                "summary": "Download a Bowtie2 index file or a FASTA file for the given subtraction"
            }
        },
        "/tasks": {
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "example": [
                                            {
                                                "complete": true,
                                                "context": {
                                                    "user_id": "virtool"
                                                },
                                                "created_at": "2021-11-24T19:40:03.320000Z",
                                                "error": null,
                                                "file_size": null,
                                                "id": 2,
                                                "progress": 100,
                                                "step": "remove_referenced_otus",
                                                "type": "delete_reference"
                                            }
                                        ],
                                        "properties": {
                                            "complete": {
                                                "title": "Complete",
                                                "type": "boolean"
                                            },
                                            "context": {
                                                "title": "Context",
                                                "type": "object"
                                            },
                                            "count": {
                                                "title": "Count",
                                                "type": "integer"
                                            },
                                            "created_at": {
                                                "format": "date-time",
                                                "title": "Created At",
                                                "type": "string"
                                            },
                                            "error": {
                                                "title": "Error",
                                                "type": "string"
                                            },
                                            "file_size": {
                                                "title": "File Size",
                                                "type": "integer"
                                            },
                                            "id": {
                                                "title": "Id",
                                                "type": "integer"
                                            },
                                            "progress": {
                                                "title": "Progress",
                                                "type": "integer"
                                            },
                                            "step": {
                                                "title": "Step",
                                                "type": "string"
                                            },
                                            "type": {
                                                "title": "Type",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "complete",
                                            "context",
                                            "count",
                                            "created_at",
                                            "id",
                                            "progress",
                                            "step",
                                            "type"
                                        ],
                                        "title": "GetTasksResponse",
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Get a list of all task documents in the database"
            }
        },
        "/tasks/{task_id}": {
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "complete": true,
                                        "context": {
                                            "user_id": "virtool"
                                        },
                                        "created_at": "2021-11-24T19:40:03.320000Z",
                                        "error": null,
                                        "file_size": null,
                                        "id": 2,
                                        "progress": 100,
                                        "step": "remove_referenced_otus",
                                        "type": "delete_reference"
                                    },
                                    "properties": {
                                        "complete": {
                                            "title": "Complete",
                                            "type": "boolean"
                                        },
                                        "context": {
                                            "title": "Context",
                                            "type": "object"
                                        },
                                        "count": {
                                            "title": "Count",
                                            "type": "integer"
                                        },
                                        "created_at": {
                                            "format": "date-time",
                                            "title": "Created At",
                                            "type": "string"
                                        },
                                        "error": {
                                            "title": "Error",
                                            "type": "string"
                                        },
                                        "file_size": {
                                            "title": "File Size",
                                            "type": "integer"
                                        },
                                        "id": {
                                            "title": "Id",
                                            "type": "integer"
                                        },
                                        "progress": {
                                            "title": "Progress",
                                            "type": "integer"
                                        },
                                        "step": {
                                            "title": "Step",
                                            "type": "string"
                                        },
                                        "type": {
                                            "title": "Type",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "complete",
                                        "context",
                                        "count",
                                        "created_at",
                                        "id",
                                        "progress",
                                        "step",
                                        "type"
                                    ],
                                    "title": "TaskResponse",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "content": {},
                        "description": ""
                    }
                },
                "summary": "Get a complete task document"
            }
        },
        "/uploads": {
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "description": "Model for user uploads.",
                                        "example": [
                                            {
                                                "created_at": "2022-01-22T17:28:21.491000Z",
                                                "id": 106,
                                                "name": "MPI19_L3_2.fq.gz",
                                                "name_on_disk": "106-MPI19_L3_2.fq.gz",
                                                "ready": true,
                                                "removed": false,
                                                "removed_at": null,
                                                "reserved": true,
                                                "size": 3356803271,
                                                "type": "reads",
                                                "uploaded_at": "2022-01-22T17:31:59.801000Z",
                                                "user": {
                                                    "administrator": true,
                                                    "handle": "mrott",
                                                    "id": "ihvze2u9"
                                                }
                                            }
                                        ],
                                        "properties": {
                                            "created_at": {
                                                "format": "date-time",
                                                "title": "Created At",
                                                "type": "string"
                                            },
                                            "id": {
                                                "title": "Id",
                                                "type": "integer"
                                            },
                                            "name": {
                                                "title": "Name",
                                                "type": "string"
                                            },
                                            "name_on_disk": {
                                                "title": "Name On Disk",
                                                "type": "string"
                                            },
                                            "ready": {
                                                "title": "Ready",
                                                "type": "boolean"
                                            },
                                            "removed": {
                                                "title": "Removed",
                                                "type": "boolean"
                                            },
                                            "removed_at": {
                                                "format": "date-time",
                                                "title": "Removed At",
                                                "type": "string"
                                            },
                                            "reserved": {
                                                "title": "Reserved",
                                                "type": "boolean"
                                            },
                                            "size": {
                                                "title": "Size",
                                                "type": "integer"
                                            },
                                            "type": {
                                                "title": "Type",
                                                "type": "string"
                                            },
                                            "uploaded_at": {
                                                "format": "date-time",
                                                "title": "Uploaded At",
                                                "type": "string"
                                            },
                                            "user": {
                                                "$ref": "#/components/schemas/UserMinimal"
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "created_at",
                                            "name",
                                            "name_on_disk",
                                            "ready",
                                            "removed",
                                            "reserved",
                                            "size",
                                            "type",
                                            "uploaded_at",
                                            "user"
                                        ],
                                        "title": "GetUploadsResponse",
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Get a list of upload documents from the `uploads` SQL table"
            },
            "post": {
                "description": "",
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Model for user uploads.",
                                    "example": {
                                        "created_at": "2022-01-22T17:28:21.491000Z",
                                        "id": 106,
                                        "name": "MPI19_L3_2.fq.gz",
                                        "name_on_disk": "106-MPI19_L3_2.fq.gz",
                                        "ready": true,
                                        "removed": false,
                                        "removed_at": null,
                                        "reserved": true,
                                        "size": 3356803271,
                                        "type": "reads",
                                        "uploaded_at": "2022-01-22T17:31:59.801000Z",
                                        "user": {
                                            "administrator": true,
                                            "handle": "mrott",
                                            "id": "ihvze2u9"
                                        }
                                    },
                                    "properties": {
                                        "created_at": {
                                            "format": "date-time",
                                            "title": "Created At",
                                            "type": "string"
                                        },
                                        "id": {
                                            "title": "Id",
                                            "type": "integer"
                                        },
                                        "name": {
                                            "title": "Name",
                                            "type": "string"
                                        },
                                        "name_on_disk": {
                                            "title": "Name On Disk",
                                            "type": "string"
                                        },
                                        "ready": {
                                            "title": "Ready",
                                            "type": "boolean"
                                        },
                                        "removed": {
                                            "title": "Removed",
                                            "type": "boolean"
                                        },
                                        "removed_at": {
                                            "format": "date-time",
                                            "title": "Removed At",
                                            "type": "string"
                                        },
                                        "reserved": {
                                            "title": "Reserved",
                                            "type": "boolean"
                                        },
                                        "size": {
                                            "title": "Size",
                                            "type": "integer"
                                        },
                                        "type": {
                                            "title": "Type",
                                            "type": "string"
                                        },
                                        "uploaded_at": {
                                            "format": "date-time",
                                            "title": "Uploaded At",
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserMinimal"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "created_at",
                                        "name",
                                        "name_on_disk",
                                        "ready",
                                        "removed",
                                        "reserved",
                                        "size",
                                        "type",
                                        "uploaded_at",
                                        "user"
                                    ],
                                    "title": "CreateUploadResponse",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "content": {},
                        "description": "Requires authorization"
                    },
                    "403": {
                        "content": {},
                        "description": "Not permitted"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    }
                },
                "summary": "Upload a new file and add it to the `uploads` SQL table"
            }
        },
        "/uploads/{id}": {
            "delete": {
                "description": "delete its associated local file.",
                "responses": {
                    "204": {
                        "content": {},
                        "description": "Successful operation"
                    },
                    "401": {
                        "content": {},
                        "description": "Requires authorization"
                    },
                    "403": {
                        "content": {},
                        "description": "Not permitted"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    }
                },
                "summary": "Set a row's `removed` and `removed_at` attribute in the `uploads` SQL table and"
            },
            "get": {
                "description": " Status Codes:\n    200: Successful operation\n    404: Not found",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {},
                        "description": ""
                    }
                },
                "summary": "Downloads a file that corresponds to a row `id` in the `uploads` SQL table"
            }
        },
        "/users": {
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {},
                        "description": "Successful operation"
                    },
                    "403": {
                        "content": {},
                        "description": "Not permitted"
                    }
                },
                "summary": "Get a list of all user documents in the database"
            },
            "post": {
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "User fields for creating a new user.",
                                "properties": {
                                    "force_reset": {
                                        "default": true,
                                        "description": "force password reset on login if true",
                                        "title": "Force Reset",
                                        "type": "boolean"
                                    },
                                    "handle": {
                                        "description": "a unique handle for the user",
                                        "minLength": 1,
                                        "title": "Handle",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "a unique password for the user",
                                        "minLength": 1,
                                        "title": "Password",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "handle",
                                    "password"
                                ],
                                "title": "CreateUserSchema",
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "administrator": {
                                            "title": "Administrator",
                                            "type": "boolean"
                                        },
                                        "b2c": {
                                            "$ref": "#/components/schemas/UserB2C"
                                        },
                                        "b2c_display_name": {
                                            "title": "B2C Display Name",
                                            "type": "string"
                                        },
                                        "b2c_family_name": {
                                            "title": "B2C Family Name",
                                            "type": "string"
                                        },
                                        "b2c_given_name": {
                                            "title": "B2C Given Name",
                                            "type": "string"
                                        },
                                        "b2c_oid": {
                                            "title": "B2C Oid",
                                            "type": "string"
                                        },
                                        "force_reset": {
                                            "title": "Force Reset",
                                            "type": "boolean"
                                        },
                                        "groups": {
                                            "items": {
                                                "$ref": "#/components/schemas/GroupMinimal"
                                            },
                                            "title": "Groups",
                                            "type": "array"
                                        },
                                        "handle": {
                                            "title": "Handle",
                                            "type": "string"
                                        },
                                        "id": {
                                            "title": "Id",
                                            "type": "string"
                                        },
                                        "last_password_change": {
                                            "format": "date-time",
                                            "title": "Last Password Change",
                                            "type": "string"
                                        },
                                        "permissions": {
                                            "$ref": "#/components/schemas/Permissions"
                                        },
                                        "primary_group": {
                                            "$ref": "#/components/schemas/GroupMinimal"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "administrator",
                                        "handle",
                                        "force_reset",
                                        "groups",
                                        "last_password_change",
                                        "permissions"
                                    ],
                                    "title": "User",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "content": {},
                        "description": "Password does not meet length requirement"
                    },
                    "403": {
                        "content": {},
                        "description": "Not permitted"
                    }
                },
                "summary": "Add a new user to the user database"
            }
        },
        "/users/first": {
            "put": {
                "description": "This endpoint will not work after the first is created. Authenticate as the\nfirst user and use those credentials to continue interacting with the API.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "User fields for adding the first user to a user database.",
                                "properties": {
                                    "handle": {
                                        "description": "a unique handle for the user",
                                        "minLength": 1,
                                        "title": "Handle",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "a unique password for the user",
                                        "minLength": 1,
                                        "title": "Password",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "handle",
                                    "password"
                                ],
                                "title": "CreateFirstUserSchema",
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "administrator": {
                                            "title": "Administrator",
                                            "type": "boolean"
                                        },
                                        "b2c": {
                                            "$ref": "#/components/schemas/UserB2C"
                                        },
                                        "b2c_display_name": {
                                            "title": "B2C Display Name",
                                            "type": "string"
                                        },
                                        "b2c_family_name": {
                                            "title": "B2C Family Name",
                                            "type": "string"
                                        },
                                        "b2c_given_name": {
                                            "title": "B2C Given Name",
                                            "type": "string"
                                        },
                                        "b2c_oid": {
                                            "title": "B2C Oid",
                                            "type": "string"
                                        },
                                        "force_reset": {
                                            "title": "Force Reset",
                                            "type": "boolean"
                                        },
                                        "groups": {
                                            "items": {
                                                "$ref": "#/components/schemas/GroupMinimal"
                                            },
                                            "title": "Groups",
                                            "type": "array"
                                        },
                                        "handle": {
                                            "title": "Handle",
                                            "type": "string"
                                        },
                                        "id": {
                                            "title": "Id",
                                            "type": "string"
                                        },
                                        "last_password_change": {
                                            "format": "date-time",
                                            "title": "Last Password Change",
                                            "type": "string"
                                        },
                                        "permissions": {
                                            "$ref": "#/components/schemas/Permissions"
                                        },
                                        "primary_group": {
                                            "$ref": "#/components/schemas/GroupMinimal"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "administrator",
                                        "handle",
                                        "force_reset",
                                        "groups",
                                        "last_password_change",
                                        "permissions"
                                    ],
                                    "title": "User",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "content": {},
                        "description": "Bad request"
                    },
                    "403": {
                        "content": {},
                        "description": "Not permitted"
                    }
                },
                "summary": "Creates the first user for the instance"
            }
        },
        "/users/{user_id}": {
            "delete": {
                "description": "Users cannot delete their own accounts.",
                "responses": {
                    "204": {
                        "content": {},
                        "description": "No content"
                    },
                    "400": {
                        "content": {},
                        "description": "Bad request"
                    },
                    "403": {
                        "content": {},
                        "description": "Not permitted"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    }
                },
                "summary": "Deletes a user"
            },
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "administrator": {
                                            "title": "Administrator",
                                            "type": "boolean"
                                        },
                                        "b2c": {
                                            "$ref": "#/components/schemas/UserB2C"
                                        },
                                        "b2c_display_name": {
                                            "title": "B2C Display Name",
                                            "type": "string"
                                        },
                                        "b2c_family_name": {
                                            "title": "B2C Family Name",
                                            "type": "string"
                                        },
                                        "b2c_given_name": {
                                            "title": "B2C Given Name",
                                            "type": "string"
                                        },
                                        "b2c_oid": {
                                            "title": "B2C Oid",
                                            "type": "string"
                                        },
                                        "force_reset": {
                                            "title": "Force Reset",
                                            "type": "boolean"
                                        },
                                        "groups": {
                                            "items": {
                                                "$ref": "#/components/schemas/GroupMinimal"
                                            },
                                            "title": "Groups",
                                            "type": "array"
                                        },
                                        "handle": {
                                            "title": "Handle",
                                            "type": "string"
                                        },
                                        "id": {
                                            "title": "Id",
                                            "type": "string"
                                        },
                                        "last_password_change": {
                                            "format": "date-time",
                                            "title": "Last Password Change",
                                            "type": "string"
                                        },
                                        "permissions": {
                                            "$ref": "#/components/schemas/Permissions"
                                        },
                                        "primary_group": {
                                            "$ref": "#/components/schemas/GroupMinimal"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "administrator",
                                        "handle",
                                        "force_reset",
                                        "groups",
                                        "last_password_change",
                                        "permissions"
                                    ],
                                    "title": "User",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Success"
                    },
                    "403": {
                        "content": {},
                        "description": "Not permitted"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    }
                },
                "summary": "Gets the details of a user"
            },
            "patch": {
                "description": "Users cannot modify their own administrative status.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "administrator": {
                                        "description": "set the user\u2019s administrator status",
                                        "title": "Administrator",
                                        "type": "boolean"
                                    },
                                    "force_reset": {
                                        "description": "force a password reset next time the user logs in",
                                        "title": "Force Reset",
                                        "type": "boolean"
                                    },
                                    "groups": {
                                        "description": "the ids of the groups the user belongs to",
                                        "items": {
                                            "type": "string"
                                        },
                                        "title": "Groups",
                                        "type": "array"
                                    },
                                    "password": {
                                        "description": "the new password",
                                        "title": "Password",
                                        "type": "string"
                                    },
                                    "primary_group": {
                                        "description": "the users primary group used for sample rights",
                                        "title": "Primary Group",
                                        "type": "string"
                                    }
                                },
                                "title": "UpdateUserSchema",
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "administrator": {
                                            "title": "Administrator",
                                            "type": "boolean"
                                        },
                                        "b2c": {
                                            "$ref": "#/components/schemas/UserB2C"
                                        },
                                        "b2c_display_name": {
                                            "title": "B2C Display Name",
                                            "type": "string"
                                        },
                                        "b2c_family_name": {
                                            "title": "B2C Family Name",
                                            "type": "string"
                                        },
                                        "b2c_given_name": {
                                            "title": "B2C Given Name",
                                            "type": "string"
                                        },
                                        "b2c_oid": {
                                            "title": "B2C Oid",
                                            "type": "string"
                                        },
                                        "force_reset": {
                                            "title": "Force Reset",
                                            "type": "boolean"
                                        },
                                        "groups": {
                                            "items": {
                                                "$ref": "#/components/schemas/GroupMinimal"
                                            },
                                            "title": "Groups",
                                            "type": "array"
                                        },
                                        "handle": {
                                            "title": "Handle",
                                            "type": "string"
                                        },
                                        "id": {
                                            "title": "Id",
                                            "type": "string"
                                        },
                                        "last_password_change": {
                                            "format": "date-time",
                                            "title": "Last Password Change",
                                            "type": "string"
                                        },
                                        "permissions": {
                                            "$ref": "#/components/schemas/Permissions"
                                        },
                                        "primary_group": {
                                            "$ref": "#/components/schemas/GroupMinimal"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "administrator",
                                        "handle",
                                        "force_reset",
                                        "groups",
                                        "last_password_change",
                                        "permissions"
                                    ],
                                    "title": "User",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "content": {},
                        "description": "Bad request"
                    },
                    "403": {
                        "content": {},
                        "description": "Not permitted"
                    },
                    "404": {
                        "content": {},
                        "description": "Not found"
                    },
                    "409": {
                        "content": {},
                        "description": "User is not member of group"
                    }
                },
                "summary": "Updates the user with the passed parameters"
            }
        }
    }
}
